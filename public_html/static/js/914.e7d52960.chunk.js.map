{"version":3,"file":"static/js/914.e7d52960.chunk.js","mappings":"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","sources":["components/appHeader/AppHeader.js","components/appVisualDisplay/AppVisualDisplay.js","components/appChannelVisualDispley/AppChannelVisualDisplay.js","components/appChannelList/AppChannelItem.js","components/appChannelList/AppChannelList.js","components/pages/MainPage.js"],"sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n      <div className=\"backsheet\">\r\n        <div className=\"appheadersheet\">\r\n          <div>\r\n            <p className=\"title\">SV SoundVisualMachine</p>\r\n            <marquee className=\"info\" direction=\"left\" scrollamount=\"4\">Real-time sound analyzer SV Sound Machine... Parses the sound stream by frequency and visually plays it. It has settings for the number of channels and their frequency. Setting up visual accompaniment. The possibility of using a computer monitor as a color music installation. Adjust the sound frequencies and their number for clearer visualization..</marquee>\r\n          </div>\r\n          <div>\r\n            ArtPRO 2022\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default AppHeader;","import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { initState } from '../../services/appProcessor';\r\n\r\nimport './appVisualDisplay.scss';\r\n// import store from '../../store';\r\n\r\nconst AppVisualDisplay = () => { \r\n    const dispatch = useDispatch();\r\n\r\n    const {rate, fillStatus, renderColor, peaksStatus} = useSelector(state => state)\r\n\r\n    const freq = () =>{\r\n        let cons\r\n        const frequencyGenerated = (max, steep, dots, mdots) => {\r\n            cons = mdots + ' 0 ';\r\n            for (let i = 0 + steep ; i < max ; i += steep){\r\n                cons += `${dots} ${i} `;\r\n            } cons += mdots;            \r\n        }\r\n        \r\n        const variations = [\r\n            257, 8, '........', '..', \r\n            206, 6, '.......', '.....',\r\n            93, 2, '....', '..',\r\n            46, 2, '..................', '..']\r\n        \r\n        let num = 0\r\n        switch (rate) {\r\n            case 204:\r\n                num = 1                \r\n            break;\r\n            case 93:\r\n                num = 2\r\n            break;\r\n            default://\r\n        }  \r\n        frequencyGenerated(\r\n            variations[4*num],\r\n            variations[4*num+1],\r\n            variations[4*num+2],\r\n            variations[4*num+3],)   \r\n            return cons;      \r\n    }\r\n\r\n    useEffect(()=>{\r\n        initState();\r\n    }) //, [mode]\r\n\r\n    return (\r\n        <div className=\"appvisualdisplaysheet\">\r\n            <div>\r\n                <span className=\"appvisualdisplaysheet__title\">VisualDisplay</span>\r\n                <select \r\n                value={rate} \r\n                className=\"appvisualdisplaysheet__item\" \r\n                onChange={(e) => dispatch({type: 'CHANGE_VISMODE', payload: e.target.value})}>\r\n                     <option value=\"255\">Mode: 255 samples</option>\r\n                     <option value=\"204\">Mode: 204 samples</option>\r\n                     <option value=\"93\">Mode: 93 samples</option>\r\n                     {/* <option value=\"44\">Mode: 45 samples</option> */}\r\n                </select>\r\n                <select \r\n                value={fillStatus}\r\n                className=\"appvisualdisplaysheet__item\"\r\n                onChange={(e) => dispatch({type: 'CHANGE_FILL_STATUS', payload: e.target.value})}>\r\n                     <option value=\"1\">Render: Fill</option>\r\n                     <option value=\"0\">Render: Stroke</option>\r\n                </select>\r\n                <select \r\n                value={renderColor}\r\n                className=\"appvisualdisplaysheet__item\"\r\n                onChange={(e) => dispatch({type: 'CHANGE_COLOR', payload: e.target.value})}\r\n                > \r\n                     <option value=\"255,255,255\">Color: White</option>\r\n                     <option value=\"0,0,255\">Color: Blue</option>\r\n                     <option value=\"255,0,0\">Color: Red</option>\r\n                     <option value=\"0,255,0\">Color: Green</option>\r\n                     <option value=\"0,255,255\">Color: Aqua</option>\r\n                     <option value=\"255,255,0\">Color: Yellow</option>\r\n                </select>\r\n                <select \r\n                value={peaksStatus}\r\n                className=\"appvisualdisplaysheet__item\"\r\n                onChange={(e) => dispatch({type: 'CHANGE_PEAKS_STATUS', payload: e.target.value})}>\r\n                     <option value=\"1\">Peaks: Yes</option>\r\n                     <option value=\"0\">Peaks: No</option>\r\n                </select>\r\n            </div>\r\n            <Canvas/>\r\n            <div className=\"appvisualdisplaysheet__center\">\r\n                <div className=\"appvisualdisplaysheet__freq\">{freq()}</div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst Canvas = () => {\r\n    return (\r\n        <canvas id='canvasDisplay'></canvas>\r\n    )    \r\n}\r\n\r\nexport default AppVisualDisplay;","import './appChannelVisualDisplay.scss'\r\n\r\nconst AppChannelVisualDisplay = () => {\r\n    return (\r\n        <div className=\"appchannelvisualdisplaysheet\">\r\n            <span className=\"appchannelvisualdisplaysheet__title\">SelectedChannelDisplay</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppChannelVisualDisplay;","import { useSelector, useDispatch } from 'react-redux'\r\n\r\n// let arr = []\r\n\r\nconst AppChannelItem = () => {\r\n \r\n    const rate = useSelector(state => state.rate)\r\n    \r\n    const elements = () => {\r\n        const arr = []\r\n        for (let i = 0; i <= rate ; i ++){\r\n            arr.push(<option key={i} value={i}>{i}</option>)  \r\n        }\r\n            return (\r\n                arr\r\n            )        \r\n    }\r\n       \r\n    \r\n    return (\r\n        <div className=\"appchannellist\">\r\n            <span className=\"appchannellist__title\">Channel </span>\r\n            <div className=\"appchannellist__line\"></div>\r\n                <div className=\"flex\">\r\n                    <div className=\"appchannellist__center\">\r\n                        <div className=\"appchannellist__navtext\">Start</div>\r\n                        <select className=\"appchannellist__select\" size={4}>\r\n                            {elements()}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"appchannellist__center\">\r\n                        <div className=\"appchannellist__navtext\">End</div>\r\n                        <select className=\"appchannellist__select\" size={4}>\r\n                            {elements()}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppChannelItem;","import AppChannelItem from './AppChannelItem';\r\nimport './appChannelList.scss'\r\n\r\nconst AppChannelList = () => {\r\n    return (\r\n       <>\r\n            <AppChannelItem/>\r\n            <AppChannelItem/>\r\n            <AppChannelItem/>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default AppChannelList;","import AppHeader from \"../appHeader/AppHeader\";\r\nimport AppVisualDisplay from \"../appVisualDisplay/AppVisualDisplay\";\r\nimport AppChannelVisualDisplay from \"../appChannelVisualDispley/AppChannelVisualDisplay\";\r\nimport AppChannelList from \"../appChannelList/AppChannelList\";\r\nimport AppControlChannelsPanel from \"../appControlChannelsPanel/AppControlChannelsPanel\";\r\n\r\nconst MainPage = () => {\r\n \r\n    return (\r\n        <div>\r\n            <AppHeader/>\r\n                <div className=\"backsheet flex\">\r\n                    <div>\r\n                        <AppVisualDisplay/>\r\n                        {/* <AppControlChannelsPanel/> */}\r\n                        <AppChannelList/>\r\n                    </div>                        \r\n                        <AppChannelVisualDisplay/>\r\n                </div>                            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;"],"names":["className","direction","scrollamount","Canvas","id","dispatch","useDispatch","useSelector","state","rate","fillStatus","renderColor","peaksStatus","useEffect","initState","value","onChange","e","type","payload","target","cons","variations","num","max","steep","dots","mdots","i","frequencyGenerated","freq","elements","arr","push","size"],"sourceRoot":""}
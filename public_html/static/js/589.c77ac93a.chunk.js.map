{"version":3,"file":"static/js/589.c77ac93a.chunk.js","mappings":"yKAaE,EAXa,WACX,OACI,gBAAKA,UAAU,4BAAf,UACE,4BACE,gBAAKA,UAAU,wBAAf,iCACA,oBAASA,UAAU,uBAAuBC,UAAU,OAAOC,aAAa,IAAxE,ghF,uXCJIC,EAAoBC,GAClC,IAAMC,GAAcC,EAAAA,EAAAA,QAAOF,GACrBG,GAAKD,EAAAA,EAAAA,SAAO,SAACE,GACjBH,EAAYI,SAAWJ,EAAYI,QAAQD,MAI7C,OAFAH,EAAYI,QAAUL,EAEfG,EAAGE,QAAAA,ICPCC,EAAQ,SAACC,EAAgBC,EAASC,GAC7C,gBADoCD,IAAAA,EAAM,YAAGC,IAAAA,EAAM,GAC5CF,EAASE,EAAMA,EAAMF,EAASC,EAAMA,EAAMD,GCO7CG,EAAU,SAACC,GAAAA,MAAwD,YAAaA,GAWhFC,EAAkB,SAACC,GACvB,OAAQA,GAAQA,EAAKC,cAAcC,aAAgBC,MAI/CC,EAAsB,SAC1BJ,EACAF,EACAO,GAEA,IAAMC,EAAON,EAAKO,wBAGZC,EAAUX,EAAQC,GArBJ,SAACW,EAAoBJ,GACzC,IAAK,IAAIK,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAClC,GAAID,EAAQC,GAAGE,aAAeP,EAAS,OAAOI,EAAQC,GAExD,OAAOD,EAAQ,GAJK,CAqB2BX,EAAMW,QAASJ,GAAYP,EAE1E,MAAO,CACLe,KAAMpB,GAAOe,EAAQM,OAASR,EAAKO,KAAOd,EAAgBC,GAAMe,cAAgBT,EAAKU,OACrFC,IAAKxB,GAAOe,EAAQU,OAASZ,EAAKW,IAAMlB,EAAgBC,GAAMmB,cAAgBb,EAAKc,UAOjFC,EAAqB,SAACvB,IACzBD,EAAQC,IAAUA,EAAMwB,kBA8GdC,EAAcC,EAAAA,MA/FH,gBAAGC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,MAAUC,EAAAA,EAAAA,EAAAA,CAAAA,SAAAA,UACrCC,GAAYvC,EAAAA,EAAAA,QAAuB,MACnCwC,EAAiB3C,EAA8BuC,GAC/CK,EAAgB5C,EAA8BwC,GAC9CrB,GAAUhB,EAAAA,EAAAA,QAAsB,MAChC0C,GAAW1C,EAAAA,EAAAA,SAAAA,GAAO,GAEuC2C,EAAAA,EAAAA,UAAQ,WACrE,IAoBMC,EAAa,SAACnC,GAElBuB,EAAmBvB,IAOJD,EAAQC,GAASA,EAAMW,QAAQE,OAAS,EAAIb,EAAMoC,QAAU,IAE7DN,EAAUpC,QACtBqC,EAAezB,EAAoBwB,EAAUpC,QAASM,EAAOO,EAAQb,UAErE2C,GAAAA,IAIEC,EAAgB,kBAAMD,GAAAA,IAkB5B,SAASA,EAAqBE,GAC5B,IAAMC,EAAQP,EAASvC,QAEjB+C,EAAexC,EADV6B,EAAUpC,SAIfgD,EAAcH,EAAQE,EAAaE,iBAAmBF,EAAaG,oBACzEF,EAAYF,EAAQ,YAAc,YAAaL,GAC/CO,EAAYF,EAAQ,WAAa,UAAWF,GAG9C,MAAO,CAnEiB,gBAAGO,EAAAA,EAAAA,YACnBC,EAAKhB,EAAUpC,QACrB,GAAKoD,IAGLvB,EAAmBsB,IAvBP,SAAC7C,EAAgCiC,GACjD,OAAOA,IAAalC,EAAQC,GADZ,CAyBE6C,EAAaZ,EAASvC,UAAaoD,GAAjD,CAEA,GAAI/C,EAAQ8C,GAAc,CACxBZ,EAASvC,SAAAA,EACT,IAAMqD,EAAiBF,EAAYE,gBAAkB,GACjDA,EAAelC,SAAQN,EAAQb,QAAUqD,EAAe,GAAGjC,YAGjEgC,EAAGE,QACHjB,EAAezB,EAAoBwC,EAAID,EAAatC,EAAQb,UAC5D2C,GAAAA,KAuBoB,SAACrC,GACrB,IAAMiD,EAAUjD,EAAMkD,OAASlD,EAAMiD,QAGjCA,EAAU,IAAMA,EAAU,KAE9BjD,EAAMwB,iBAINQ,EAAc,CACZjB,KAAkB,KAAZkC,EAAiB,IAAmB,KAAZA,GAAkB,IAAO,EACvD9B,IAAiB,KAAZ8B,EAAiB,IAAmB,KAAZA,GAAkB,IAAO,MAelBZ,KACvC,CAACL,EAAeD,IArEZoB,EAAAA,EAAAA,GAAiBC,EAAAA,EAAAA,GAAef,EAAAA,EAAAA,GA0EvC,OAFAgB,EAAAA,EAAAA,YAAU,kBAAMhB,IAAsB,CAACA,IAGrCX,EAAAA,cAAAA,MAAAA,EAAAA,GACMG,EAAAA,CACJyB,aAAcH,EACdI,YAAaJ,EACblE,UAAU,8BACVuE,IAAK1B,EACL2B,UAAWL,EACXM,SAAU,EACVC,KAAK,eCxJEC,EAAkB,SAACC,GAAAA,OAA6BA,EAAMC,OAAOC,SAASC,KAAK,MCU3EC,EAAU,SAAC,GAAD,IAAcC,EAAAA,EAAAA,MAAOnD,EAAAA,EAAAA,KAAAA,EAAAA,EAAMI,IAAAA,OAAAA,IAAAA,EAAM,KAChDgD,EAAgBP,EAAgB,CAAC,4BADf3E,YAQxB,OACEyC,EAAAA,cAAAA,MAAAA,CAAKzC,UAAWkF,EAAeC,MANnB,CACZjD,IAAc,IAANA,EAAAA,IACRJ,KAAgB,IAAPA,EAAAA,MAKPW,EAAAA,cAAAA,MAAAA,CAAKzC,UAAU,+BAA+BmF,MAAO,CAAEC,gBAAiBH,OCpBjEI,EAAQ,SAAC1E,EAAgB2E,EAAYC,GAChD,gBADoCD,IAAAA,EAAS,YAAGC,IAAAA,EAAOC,KAAKC,IAAI,GAAIH,IAC7DE,KAAKH,MAAME,EAAO5E,GAAU4E,GCcxBG,GALCF,KAAKG,GAKM,SAACC,GAGxB,MAFe,MAAXA,EAAI,KAAYA,EAAMA,EAAIC,OAAO,IAEjCD,EAAIhE,OAAS,EACR,CACLkE,EAAGC,SAASH,EAAI,GAAKA,EAAI,GAAI,IAC7BI,EAAGD,SAASH,EAAI,GAAKA,EAAI,GAAI,IAC7BK,EAAGF,SAASH,EAAI,GAAKA,EAAI,GAAI,IAC7BM,EAAG,GAIA,CACLJ,EAAGC,SAASH,EAAIC,OAAO,EAAG,GAAI,IAC9BG,EAAGD,SAASH,EAAIC,OAAO,EAAG,GAAI,IAC9BI,EAAGF,SAASH,EAAIC,OAAO,EAAG,GAAI,IAC9BK,EAAG,KAqCMC,EAAa,SAAC,GAAD,IAAMC,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGH,EAAAA,EAAAA,EAC9BI,GAAO,IAAMF,GAAKC,EAAK,IAE7B,MAAO,CACLE,EAAGlB,EAAAA,EAJsBkB,GAKzBH,EAAGf,EAAMiB,EAAK,GAAKA,EAAK,IAAQF,EAAIC,EAAK,KAAOC,GAAM,IAAMA,EAAK,IAAMA,GAAO,IAAM,GACpFE,EAAGnB,EAAMiB,EAAK,GACdJ,EAAGb,EAAMa,EAAG,KAIHO,EAAkB,SAACC,GAAAA,IAAAA,EACVP,EAAWO,GAC/B,aAAAZ,EADQS,EAAAA,KAAAA,EAAGH,EAAAA,MAAAA,EAAGI,EAAAA,MAmBHG,EAAa,SAAC,GAAD,IAAGJ,EAAAA,EAAAA,EAAGH,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGH,EAAAA,EAAAA,EACpCK,EAAKA,EAAI,IAAO,EAChBH,GAAQ,IACRC,GAAQ,IAER,IAAMC,EAAKd,KAAKoB,MAAML,GACpBN,EAAII,GAAK,EAAID,GACbS,EAAIR,GAAK,GAAKE,EAAID,GAAMF,GACxBU,EAAIT,GAAK,GAAK,EAAIE,EAAID,GAAMF,GAC5BW,EAAST,EAAK,EAEhB,MAAO,CACLR,EAAGT,EAAmC,IAA7B,CAACgB,EAAGQ,EAAGZ,EAAGA,EAAGa,EAAGT,GAAGU,IAC5Bf,EAAGX,EAAmC,IAA7B,CAACyB,EAAGT,EAAGA,EAAGQ,EAAGZ,EAAGA,GAAGc,IAC5Bd,EAAGZ,EAAmC,IAA7B,CAACY,EAAGA,EAAGa,EAAGT,EAAGA,EAAGQ,GAAGE,IAC5Bb,EAAGb,EAAMa,EAAG,KA8CVc,EAAS,SAACrG,GACd,IAAMiF,EAAMjF,EAAOsG,SAAS,IAC5B,OAAOrB,EAAIhE,OAAS,EAAI,IAAMgE,EAAMA,GAOzBsB,EAAa,SAAC,GAAD,IAAGpB,EAAAA,EAAAA,EAAGE,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAC9BrF,EAAM2E,KAAK3E,IAAIiF,EAAGE,EAAGC,GACrBkB,EAAQtG,EAAM2E,KAAK5E,IAAIkF,EAAGE,EAAGC,GAG7BK,EAAKa,EACPtG,IAAQiF,GACLE,EAAIC,GAAKkB,EACVtG,IAAQmF,EACN,GAAKC,EAAIH,GAAKqB,EACd,GAAKrB,EAAIE,GAAKmB,EAClB,EAEJ,MAAO,CACLZ,EAAGlB,EAAM,IAAMiB,EAAK,EAAIA,EAAK,EAAIA,IACjCF,EAAGf,EAAMxE,EAAOsG,EAAQtG,EAAO,IAAM,GACrCwF,EAAGhB,EAAOxE,EAAM,IAAO,KACvBqF,EAAAA,IC1ISkB,EAAM3E,EAAAA,MAhCH,gBAAc4E,EAAAA,EAAAA,IAAKC,EAAAA,EAAAA,SAY3BpC,EAAgBP,EAAgB,CAAC,wBAZtB3E,YAcjB,OACEyC,EAAAA,cAAAA,MAAAA,CAAKzC,UAAWkF,GACdzC,EAAAA,cAACD,EAAAA,CACCE,OAhBa,SAAC6E,GAClBD,EAAS,CAAEf,EAAG,IAAMgB,EAAYzF,QAgB5Ba,MAbY,SAAC6E,GAEjBF,EAAS,CACPf,EAAG7F,EAAM2G,EAAoB,IAAdG,EAAO1F,KAAY,EAAG,QAWnC2F,aAAW,MACXC,iBAAgBrC,EAAMgC,IAEtB5E,EAAAA,cAACuC,EAAAA,CACChF,UAAU,8BACV8B,KAAMuF,EAAM,IACZpC,MAAOwB,EAAgB,CAAEF,EAAGc,EAAKjB,EAAG,IAAKC,EAAG,IAAKH,EAAG,WCWjDyB,EAAalF,EAAAA,MAvCH,gBAAGiE,EAAAA,EAAAA,KAAMY,EAAAA,EAAAA,SAgBxBM,EAAiB,CACrBxC,gBAAiBqB,EAAgB,CAAEF,EAAGG,EAAKH,EAAGH,EAAG,IAAKC,EAAG,IAAKH,EAAG,KAGnE,OACEzD,EAAAA,cAAAA,MAAAA,CAAKzC,UAAU,6BAA6BmF,MAAOyC,GACjDnF,EAAAA,cAACD,EAAAA,CACCE,OAtBa,SAAC6E,GAClBD,EAAS,CACPlB,EAAsB,IAAnBmB,EAAYzF,KACfuE,EAAG,IAAwB,IAAlBkB,EAAYrF,OAoBnBS,MAhBY,SAAC6E,GAEjBF,EAAS,CACPlB,EAAG1F,EAAMgG,EAAKN,EAAkB,IAAdoB,EAAO1F,KAAY,EAAG,KACxCuE,EAAG3F,EAAMgG,EAAKL,EAAiB,IAAbmB,EAAOtF,IAAW,EAAG,QAarCuF,aAAW,QACXC,iBAAAA,cAA8BrC,EAAMqB,EAAKN,GAAAA,iBAAmBf,EAAMqB,EAAKL,GAAAA,KAEvE5D,EAAAA,cAACuC,EAAAA,CACChF,UAAU,qCACVkC,IAAK,EAAIwE,EAAKL,EAAI,IAClBvE,KAAM4E,EAAKN,EAAI,IACfnB,MAAOwB,EAAgBC,UC1CpBmB,EAAoB,SAACC,EAAoBC,GACpD,GAAID,IAAUC,EAAQ,OAAO,EAE7B,IAAK,IAAMC,KAAQF,EAMjB,GACIA,EAA6CE,KAC7CD,EAA8CC,GAEhD,OAAO,EAGX,UAI0D,SClB5CC,EACdC,EACAjD,EACAqC,GAGA,IAAMa,EAAmBhI,EAAoBmH,GAAAA,GAIlBc,EAAAA,EAAAA,WAAoB,kBAAMF,EAAWG,OAAOpD,MAAhEyB,EAAAA,EAAAA,GAAM4B,EAAAA,EAAAA,GAIPC,GAAQjI,EAAAA,EAAAA,QAAO,CAAE2E,MAAAA,EAAOyB,KAAAA,KAI9BtC,EAAAA,EAAAA,YAAU,WACR,IAAK8D,EAAWM,MAAMvD,EAAOsD,EAAM9H,QAAQwE,OAAQ,CACjD,IAAMwD,EAAUP,EAAWG,OAAOpD,GAClCsD,EAAM9H,QAAU,CAAEiG,KAAM+B,EAASxD,MAAAA,GACjCqD,EAAWG,MAEZ,CAACxD,EAAOiD,KAIX9D,EAAAA,EAAAA,YAAU,WACR,IAAIsE,EAEDb,EAAkBnB,EAAM6B,EAAM9H,QAAQiG,OACtCwB,EAAWM,MAAOE,EAAWR,EAAWS,SAASjC,GAAQ6B,EAAM9H,QAAQwE,SAExEsD,EAAM9H,QAAU,CAAEiG,KAAAA,EAAMzB,MAAOyD,GAC/BP,EAAiBO,MAElB,CAAChC,EAAMwB,EAAYC,IAItB,IAAMS,GAAeC,EAAAA,EAAAA,cAAY,SAACC,GAChCR,GAAW,SAAC7H,GAAAA,OAAYsI,OAAOC,OAAO,GAAIvI,EAASqI,QAClD,IAEH,MAAO,CAACpC,EAAMkC,GAAAA,ICjDZK,ECISC,EACO,oBAAXC,OAAyBC,EAAAA,gBAAkBhF,EAAAA,UCE9CiF,EAAmD,IAAIC,IAKhDC,EAAgB,SAACC,GAC5BN,GAA0B,WACxB,IAAMO,EAAiBD,EAAQ/I,QAAU+I,EAAQ/I,QAAQS,cAAgBwI,SAEzE,YAAWD,IAAmCJ,EAAgBM,IAAIF,GAAiB,CACjF,IAAMG,EAAeH,EAAeI,cAAc,SAClDD,EAAaE,UAAAA,ktDACbT,EAAgBU,IAAIN,EAAgBG,GAGpC,IAAMX,EFdNA,GACiDe,EAAAA,GEc7Cf,GAAOW,EAAaK,aAAa,QAAShB,GAE9CQ,EAAeS,KAAKC,YAAYP,MAEjC,KCdQQ,EAAc,gBACzBpK,EAAAA,EAAAA,UACAkI,EAAAA,EAAAA,WAAAA,EAAAA,EACAjD,MAAAA,OAAAA,IAAAA,EAAQiD,EAAWmC,aAAAA,EACnB/C,EAAAA,EAAAA,SACG1E,EAAAA,EAAAA,EAAAA,CAAAA,YAAAA,aAAAA,QAAAA,aAEG4G,GAAUlJ,EAAAA,EAAAA,QAAuB,MACvCiJ,EAAcC,GAAAA,IAAAA,EAEavB,EAAwBC,EAAYjD,EAAOqC,GAA/DZ,EAAAA,EAAAA,GAAM4B,EAAAA,EAAAA,GAEPpD,EAAgBP,EAAgB,CAAC,iBAAkB3E,IAEzD,OACEyC,EAAAA,cAAAA,MAAAA,EAAAA,GAASG,EAAAA,CAAM2B,IAAKiF,EAASxJ,UAAWkF,IACtCzC,EAAAA,cAACkF,EAAAA,CAAWjB,KAAMA,EAAMY,SAAUgB,IAClC7F,EAAAA,cAAC2E,EAAAA,CAAIC,IAAKX,EAAKH,EAAGe,SAAUgB,EAAYtI,UAAU,mCCxBlDkI,EAAiC,CACrCmC,aAAc,MACdhC,OTIuB,SAACzC,GAAAA,OAA2BsB,EAAWxB,EAAUE,KSHxE+C,STwDuB,SAACjC,GAAAA,OAmGKV,GAAAA,EAnGiCW,EAAWD,IAmG5CV,EAAGC,EAAAA,EAAAA,EACzB,IAAMe,EAAAA,EADalB,GACDkB,EAAOhB,GAAKgB,EAAOf,GADrB,MAAMD,EAAGC,GS1JhCuC,MNesB,SAACV,EAAeC,GACtC,OAAID,EAAMwC,gBAAkBvC,EAAOuC,eAG5BzC,EAAkBnC,EAAUoC,GAAQpC,EAAUqC,MMhB1CwC,EAAiB,SAACC,GAAAA,OAC7B/H,EAAAA,cAAC2H,EAAAA,EAAAA,GAAgBI,EAAAA,CAAOtC,WAAYA,M,slBCmBtC,EA/BwB,SAAC3D,EAAKnE,IAC5BgE,EAAAA,EAAAA,YAAU,WACR,IAAIqG,GAAgB,EAChBC,GAAqB,EAEnBC,EAAW,SAAC5J,IAEZ0J,GAAkBC,GAEjBnG,EAAI9D,UAAW8D,EAAI9D,QAAQmK,SAAS7J,EAAM8J,SAE/CzK,EAAQW,IAGJ+J,EAAqB,SAAC/J,GAC1B2J,EAAqBnG,EAAI9D,QACzBgK,EAAgBlG,EAAI9D,SAAW8D,EAAI9D,QAAQmK,SAAS7J,EAAM8J,SAO5D,OAJAnB,SAAShG,iBAAiB,YAAaoH,GACvCpB,SAAShG,iBAAiB,aAAcoH,GACxCpB,SAAShG,iBAAiB,QAASiH,GAE5B,WACLjB,SAAS/F,oBAAoB,YAAamH,GAC1CpB,SAAS/F,oBAAoB,aAAcmH,GAC3CpB,SAAS/F,oBAAoB,QAASgH,MAEvC,CAACpG,EAAKnE,KCzBE2K,EAAgB,SAAC,GAAyB,IAAvB9F,EAAsB,EAAtBA,MAAOqC,EAAe,EAAfA,SAC/B0D,GAAU1K,EAAAA,EAAAA,UAChB,GAAyB8H,EAAAA,EAAAA,WAAS,GAAlC,eAAO6C,EAAP,KAAeC,EAAf,KACA,GAA0B9C,EAAAA,EAAAA,UAASnD,GAAnC,eAAOzE,EAAP,KAAc2K,EAAd,KAEMC,GAAQvC,EAAAA,EAAAA,cAAY,kBAAMqC,GAAO,KAAQ,IAK/C,OAJAG,EAAgBL,EAASI,G,8NAEzBE,EAAkB,kBAAMhE,EAAS9G,KAAQ,IAAK,CAACA,KAG7C,iBAAKR,UAAU,SAAf,WACE,gBACEA,UAAU,SACVmF,MAAO,CAAEoG,WAAW,oCAAD,OAAsCtG,EAAtC,gBACnBuG,QAAS,kBAAMN,GAAO,MAGvBD,IACC,gBAAKjL,UAAU,UAAUuE,IAAKyG,EAA9B,UACE,SAAC,EAAD,CAAgB/F,MAAOzE,EAAO8G,SAAU6D,U,SCuGlD,EAxHsB,WAClB,OAAyGM,EAAAA,EAAAA,KAAlGC,EAAP,EAAOA,iBAAkBC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,kBAAmBC,EAA1D,EAA0DA,YAAaC,EAAvE,EAAuEA,kBAAmBC,EAA1F,EAA0FA,YACpFC,GAAOC,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,EAAM0I,QAClCE,GAAaD,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,EAAM4I,cACxCC,GAAcF,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,EAAM6I,eACzCC,GAAcH,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,EAAM8I,eACzCC,GAAcJ,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,EAAM+I,eAE/C,GAA0BjE,EAAAA,EAAAA,UAAS+D,GAAnC,eAAOlH,EAAP,KAAcqH,EAAd,KAkDA,OALAlI,EAAAA,EAAAA,YAAU,YACNmI,EAAAA,EAAAA,MACAV,EAAY5G,OAIZ,iBAAKuH,GAAG,gBAAgBxM,UAAU,gCAAlC,WACI,iBAAKA,UAAU,qBAAf,WACA,gBAAKA,UAAU,aAAf,0GACI,iBAAKA,UAAU,YAAf,WACI,oBAASA,UAAU,gBAAnB,UACI,SAAC+K,EAAD,CAAe9F,MAAOA,EAAOqC,SAAUgF,OAE3C,8BACI,oBACIG,aAAcP,EACd5E,SAAU,SAACoF,GAAD,OAAOhB,EAAiBgB,EAAE7B,SAFxC,WAGQ,mBAAQrK,MAAM,IAAd,4JACA,mBAAQA,MAAM,IAAd,iKAGZ,8BACI,oBACIiM,aAAcL,EACd9E,SAAU,SAACoF,GAAD,OAAOZ,EAAkBY,EAAE7B,SAFzC,WAGQ,mBAAQrK,MAAM,IAAd,qDACA,mBAAQA,MAAM,IAAd,gEAGZ,8BACI,oBACIiM,aAAcJ,EACd/E,SAAU,SAACoF,GAAD,OAAOd,EAAkBc,EAAE7B,SAFzC,WAGQ,mBAAQrK,MAAM,IAAd,+FACA,mBAAQA,MAAM,MAAd,gFACA,mBAAQA,MAAM,MAAd,gFACA,mBAAQA,MAAM,MAAd,gFACA,mBAAQA,MAAM,MAAd,qFAGZ,8BACI,oBACIiM,aAAcT,EACd1E,SAAU,SAACoF,GAAD,OAAOf,EAAae,EAAE7B,SAFpC,WAGQ,mBAAQrK,MAAM,OAAd,kKACA,mBAAQA,MAAM,MAAd,iKACA,mBAAQA,MAAM,MAAd,iKACA,mBAAQA,MAAM,MAAd,iKACA,mBAAQA,MAAM,KAAd,2KAMpB,mBAAQgM,GAAG,mBACX,gBAAKxM,UAAU,6BAAf,UACI,gBAAKA,UAAU,2BAAf,SAnGC,WACT,IAAI2M,EAQEC,EAAa,CACf,IAAK,EAAG,WAAY,KACpB,IAAK,EAAG,UAAW,QACnB,GAAI,EAAG,OAAQ,KACf,IAAK,GAAI,QAAS,KAClB,KAAM,GAAI,KAAM,MAEhBC,EAAM,EACV,OAAQb,GACJ,KAAK,KACDa,EAAM,EACV,MACA,KAAK,IACDA,EAAM,EACV,MACA,KAAK,IACDA,EAAM,EACV,MACA,KAAK,IACDA,EAAM,EACV,MACA,KAAK,GACDA,EAAM,EASV,OAtCuB,SAAChM,EAAKiM,EAAOC,EAAMC,GAC1CL,EAAOK,EAAQ,MACf,IAAK,IAAIrL,EAAI,EAAImL,EAAQnL,EAAId,EAAMc,GAAKmL,EACpCH,GAAI,UAAOI,EAAP,YAAepL,EAAf,KACNgL,GAAQK,EA6BdC,CACIL,EAAW,EAAEC,GACbD,EAAW,EAAEC,EAAI,GACjBD,EAAW,EAAEC,EAAI,GACjBD,EAAW,EAAEC,EAAI,IACVF,EA2DwCO,QAE/C,gBAAKlN,UAAU,eACf,4BACI,iBAAMA,UAAU,aAAhB,6HACA,mBAAQwL,QAASO,EAAjB,oGC2ChB,EAjKoB,SAAC,GAAU,IAATS,EAAQ,EAARA,GAClB,GAO4Bf,EAAAA,EAAAA,KAPpB0B,EAAR,EAAQA,kBACAC,EADR,EACQA,eACAC,EAFR,EAEQA,WACAC,EAHR,EAGQA,YACAC,EAJR,EAIQA,eACAC,EALR,EAKQA,cACAC,EANR,EAMQA,iBACAC,EAPR,EAOQA,iBAEF1B,GAAOC,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,EAAM0I,QACjC2B,GAAY1B,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,KAAjCqK,SACP,GAA0BvF,EAAAA,EAAAA,UAASuF,EAASnB,GAAIvH,OAAhD,eAAOA,EAAP,KAAcqH,EAAd,KAEMsB,EAAK,aAASpB,GACdqB,EAAI,YAAQrB,GACZsB,EAAI,YAAQtB,GACZuB,EAAI,YAAQvB,GACZwB,EAAI,YAAQxB,GACZyB,EAAI,YAAQzB,GACZ0B,EAAI,YAAQ1B,GAEZ2B,EAAW,SAACtN,GAEd,IADA,IAAMuN,EAAM,GACHzM,EAAI,EAAGA,GAAKd,EAAMc,IACvByM,EAAIC,MAAK,mBAAgB7N,MAAOmB,EAAvB,SAA2BA,GAAdA,IACxB,OAAOyM,GAOb,OAJAhK,EAAAA,EAAAA,YAAU,WACN+I,EAAkBlI,EAAOuH,KAC1B,CAACvH,KAGA,iBAAKjF,UAAU,yBAAf,WACI,iBAAKA,UAAU,qBAAf,WACI,iBAAKA,UAAU,aAAf,8CAAqC2N,EAASnB,GAAI8B,SAClD,iBAAKtO,UAAU,YAAf,WACI,0BACI,oBAASA,UAAU,gBAAnB,UACI,SAAC+K,EAAD,CAAe9F,MAAOA,EAAOqC,SAAUgF,SAG/C,yBACKE,EAAK,GAAI,mBACNxM,UAAU,cACVwM,GAAIA,EACJhB,QAAS,SAACkB,GAAD,OAAOc,EAAcd,EAAE7B,OAAO2B,KAHjC,uFAImB,cAKzC,gBAAKxM,UAAU,eACf,iBAAKA,UAAU,qBAAf,WACI,iBAAKA,UAAU,cAAf,WACI,gBAAKA,UAAU,eAAf,mDACA,mBACIA,UAAU,sBACVuO,KAAM,EACN/N,MAAOmN,EAASnB,GAAI5L,IACpB4L,GAAIA,EACJlF,SAAU,SAACoF,GAAD,OAAOe,EAAiBf,EAAE7B,OAAQ2B,IALhD,SAMK2B,EAASnC,SAGlB,iBAAKhM,UAAU,cAAf,WACI,gBAAKA,UAAU,eAAf,6CACA,mBACIA,UAAU,sBACVuO,KAAM,EACN/N,MAAOmN,EAASnB,GAAI3L,IACpB2L,GAAIA,EACJlF,SAAU,SAACoF,GAAD,OAAOgB,EAAiBhB,EAAE7B,OAAQ2B,IALhD,SAMK2B,EAASnC,SAGlB,iBAAKhM,UAAU,iBAAf,WACI,gBAAKA,UAAU,eAAf,sEACA,gBAAKA,UAAU,6BAAf,SAA6C2N,EAASnB,GAAI5L,OAC1D,gBAAKZ,UAAU,eAAf,sEACA,gBAAKA,UAAU,6BAAf,SAA6C2N,EAASnB,GAAI3L,UAE9D,iBAAKb,UAAU,iBAAf,WACI,gBAAKA,UAAU,eAAf,mIACA,oBACIA,UAAU,sBACVwM,GAAIA,EACJ+B,KAAM,EACN/N,MAAOmN,EAASnB,GAAIgC,SACpBlH,SAAU,SAACoF,GAAD,OAAOU,EAAeV,EAAE7B,OAAQ2B,IAL9C,WAMQ,mBAAQhM,MAAM,UAAd,6HACA,mBAAQA,MAAM,UAAd,iKAGZ,iBAAKR,UAAU,iBAAf,WACI,gBAAKA,UAAU,eAAf,4PACA,iBAAKA,UAAU,mCAAf,WACI,gBAAKA,UAAU,MAAMwM,GAAIoB,KACzB,gBAAK5N,UAAU,YAAYwM,GAAIqB,KAC/B,gBAAK7N,UAAU,aAAawM,GAAIuB,KAChC,gBAAK/N,UAAU,aAAawM,GAAIwB,KAChC,gBAAKhO,UAAU,eAAewM,GAAIyB,KAClC,gBAAKjO,UAAU,eAAewM,GAAI0B,WAG1C,iBAAKlO,UAAU,iBAAf,WACI,gBAAKA,UAAU,eAAf,iCACA,gBAAKA,UAAU,WAAf,UACI,gBAAKA,UAAU,8BAA8BwM,GAAIsB,UAGrD,iBAAK9N,UAAU,iBAAf,WACI,gBAAKA,UAAU,eAAf,iCACA,mBACIA,UAAU,sBACVuO,KAAM,EACN/N,MAAOmN,EAASnB,GAAIiC,KACpBjC,GAAIA,EACJlF,SAAU,SAACoF,GAAD,OAAOW,EAAWX,EAAE7B,OAAQ2B,IAL1C,SAMK2B,EAAS,UAGlB,iBAAKnO,UAAU,cAAf,WACI,gBAAKA,UAAU,eAAf,6CACA,mBACIA,UAAU,sBACVuO,KAAM,EACN/N,MAAOmN,EAASnB,GAAIkC,MACpBlC,GAAIA,EACJlF,SAAU,SAACoF,GAAD,OAAOY,EAAYZ,EAAE7B,OAAQ2B,IAL3C,SAMK2B,EAAS,UAGlB,iBAAKnO,UAAU,iBAAf,WACI,gBAAKA,UAAU,eAAf,kFACA,gBAAKA,UAAU,6BAAf,SAA6C2N,EAASnB,GAAIkC,SAC1D,gBAAK1O,UAAU,eAAf,sEACA,gBAAKA,UAAU,6BAAf,SAA6C2N,EAASnB,GAAIiC,WAE9D,iBAAKzO,UAAU,iBAAf,WACI,gBAAKA,UAAU,eAAf,yDACA,oBACIA,UAAU,sBACVwM,GAAIA,EACJhM,MAAOmN,EAASnB,GAAImC,SACpBJ,KAAM,EACNjH,SAAU,SAACoF,GAAD,OAAOa,EAAeb,EAAE7B,OAAQ2B,IAL9C,WAMI,mBAAQhM,MAAM,IAAd,gBACA,mBAAQA,MAAM,IAAd,gBACA,mBAAQA,MAAM,IAAd,gBACA,mBAAQA,MAAM,IAAd,gBACA,mBAAQA,MAAM,IAAd,4BC3I5B,EAdoB,WAChB,IAEMoO,GAFa3C,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,KAAjCqK,SAEgBkB,KAAI,SAACC,EAAMnN,GAC1B,OAAO,SAAC,EAAD,CAAqB6K,GAAI7K,GAAPA,MAGjC,OACG,8BACMiN,KCRPG,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,gCACzBC,GAAkBD,EAAAA,EAAAA,OAAK,kBAAM,gCAyBnC,EAvBiB,WAEb,OACI,4BACI,SAAC,EAAD,KACI,gBAAMxC,GAAG,YACT,gBAAKA,GAAG,kBACR,SAAC,EAAA0C,SAAD,CAAUC,SAAS,aAAnB,UACI,iBAAKnP,UAAU,YAAf,WACI,4BACI,SAAC,EAAD,IACCmJ,OAAOiG,WAAa,MAAO,SAACH,EAAD,IAAqB,MACjD,SAAC,EAAD,QAEJ,yBACK9F,OAAOiG,WAAa,MAAO,SAACL,EAAD,IAAiB,iB,4DCuLzE,IAxMgB,WACZ,IAAMM,GAAWC,EAAAA,EAAAA,MACX3B,GAAW1B,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,EAAMqK,YACtC4B,GAAatD,EAAAA,EAAAA,KAAY,SAAA3I,GAAK,OAAIA,EAAMiM,cAOxC7B,EAAmB,SAAChB,EAAG/K,GACzB,IAAM6N,EAAU7B,EAChB6B,EAAQ7N,GAAGd,KAAO6L,EAAElM,MAEpB6O,EAAS,CAACI,KAAM,uBAAwBD,QAASA,IAE9C9C,EAAElM,MAAQmN,EAAShM,GAAGf,KACrB6M,EAAiBf,EAAG/K,IAExB+N,EAAAA,EAAAA,OAGEjC,EAAmB,SAACf,EAAG/K,GACzB,IAAM6N,EAAU7B,EAChB6B,EAAQ7N,GAAGf,KAAO8L,EAAElM,MAEpB6O,EAAS,CAACI,KAAM,uBAAwBD,QAASA,IAE9C9C,EAAElM,MAAQmN,EAAShM,GAAGd,KACrB6M,EAAiBhB,EAAG/K,IAExB+N,EAAAA,EAAAA,OAkJJ,OAPAtL,EAAAA,EAAAA,YAAU,WACNiL,EAAS,CAACI,KAAM,kBAAmBE,UAAUC,EAAAA,EAAAA,MAAeC,SAAU1G,OAAO2G,SAASC,SACvF,CAACR,IAGJS,aAAaC,QAAQ,WAAYC,KAAKC,UAAUxC,IAEzC,CAACjC,iBA5KiB,SAACgB,GACtBsD,aAAaC,QAAQ,aAAcvD,EAAElM,OACrC6O,EAAS,CAACI,KAAM,qBAAsBW,KAAM1D,EAAElM,SA2K1CuL,YArCY,WAChB,IACIsE,EADQ,6BAA6BC,MAAM,IACjCC,MAAK,SAAA5O,GAAC,OAAKgM,EAASkB,KAAI,SAAAC,GAAI,OAAIA,EAAKR,QAAMkC,SAAS7O,MAClE,GAAGgM,EAAS/L,OAAS,GAAG,CACpB,IAAM4N,EAAU7B,EAChB6B,EAAQnB,KACJ,CAACC,KAAM+B,EAAKzP,IAAK,EAAGC,IAAK,EACzBoE,MAAO,UACPuJ,SAAU,UAAWC,KAAM,GAC3BC,MAAO,GAAIC,SAAU,IAE7Ba,EAAQiB,MAAK,SAACvK,EAAGD,GACb,OAAGC,EAAEoI,KAAOrI,EAAEqI,MAAc,EACzBpI,EAAEoI,KAAOrI,EAAEqI,KAAa,OAA3B,KAGAe,EAAS,CAACI,KAAM,uBAAwBD,QAASA,KACjDE,EAAAA,EAAAA,QAqBA/D,aAlDa,SAACe,IA/FA,SAACA,GACnBsD,aAAaC,QAAQ,OAAQvD,EAAElM,OAC/B6O,EAAS,CAACI,KAAM,iBAAkBzD,KAAMU,EAAElM,QA8F1CkQ,CAAchE,GACdiB,EAASgD,SAAQ,SAAC7B,EAAMnN,GACjBmN,EAAKjO,KAAO6L,EAAElM,OACbkN,EAAiBhB,EAAG/K,GAErBmN,EAAKlO,KAAO8L,EAAElM,OACbiN,EAAiBf,EAAG/K,OA4CxBkK,YAxIY,SAACa,GAEjBsD,aAAaC,QAAQ,cAAevD,GACpC2C,EAAS,CAACI,KAAM,eAAgBxK,MAAOyH,KAsInCZ,kBAnIkB,SAACY,GACvBsD,aAAaC,QAAQ,cAAevD,EAAElM,OACtC6O,EAAS,CAACI,KAAM,sBAAuBmB,MAAOlE,EAAElM,SAkI5C2M,kBA/HkB,SAAClI,EAAOtD,GAC9B,IAAM6N,EAAU7B,EAChB6B,EAAQ7N,GAAGsD,MAAQA,EAEnBoK,EAAS,CAACI,KAAM,uBAAwBD,QAASA,KACjDE,EAAAA,EAAAA,OA2HItC,eAxHe,SAACV,EAAG/K,GACvB,IAAM6N,EAAU7B,EAChB6B,EAAQ7N,GAAG6M,SAAW9B,EAAElM,MAExB6O,EAAS,CAACI,KAAM,uBAAwBD,QAASA,KAqH7CnC,WAlHW,SAACX,EAAG/K,GACnB,IAAM6N,EAAU7B,EAChB6B,EAAQ7N,GAAG8M,MAAQ/B,EAAElM,MAErB6O,EAAS,CAACI,KAAM,uBAAwBD,QAASA,KA+G7ClC,YA5GY,SAACZ,EAAG/K,GACpB,IAAM6N,EAAU7B,EAChB6B,EAAQ7N,GAAG+M,OAAShC,EAAElM,MAEtB6O,EAAS,CAACI,KAAM,uBAAwBD,QAASA,KAyG7CjC,eAtGe,SAACb,EAAG/K,GACvB,IAAM6N,EAAU7B,EAChB6B,EAAQ7N,GAAGgN,UAAYjC,EAAElM,MAEzB6O,EAAS,CAACI,KAAM,uBAAwBD,QAASA,KAmG7ChC,cAzBc,SAAC7L,GACnB,IAAM6N,EAAU7B,EAChB6B,EAAQqB,QAAQlP,EAAG,GAEnB0N,EAAS,CAACI,KAAM,uBAAwBD,QAASA,KACjDE,EAAAA,EAAAA,OAqBIjC,iBAAAA,EACAC,iBAAAA,EACAoD,cAnGc,SAACpE,GACnBsD,aAAaC,QAAQ,YAAavD,EAAElM,MAAM,KAC1C6O,EAAS,CAACI,KAAM,kBAAmBjP,MAAOkM,EAAElM,SAC5C+L,EAAAA,EAAAA,OAiGIwE,gBA9FgB,SAACrE,GACrBsD,aAAaC,QAAQ,cAAevD,EAAElM,MAAM,KAC5C6O,EAAS,CAACI,KAAM,oBAAqBjP,MAAOkM,EAAElM,SAC9C+L,EAAAA,EAAAA,OA4FIyE,UAnFU,SAACtE,GACfsD,aAAaC,QAAQ,SAAUvD,EAAElM,OACjC6O,EAAS,CAACI,KAAM,yBAA0BjP,MAAOkM,EAAElM,SACnD+L,EAAAA,EAAAA,OAiFIX,kBA1JkB,SAACc,GACvBsD,aAAaC,QAAQ,cAAevD,EAAElM,OACtC6O,EAAS,CAACI,KAAM,qBAAsBpD,YAAaK,EAAElM,SAyJjDyQ,aA/Ea,SAACvE,GAClBsD,aAAaC,QAAQ,SAAUvD,EAAEwE,SACjC7B,EAAS,CAACI,KAAM,uBAAwBjP,MAAOkM,EAAEwE,WA8E7CC,aA3Ea,SAACzE,GAClBsD,aAAaC,QAAQ,SAAUvD,EAAEwE,SACjC7B,EAAS,CAACI,KAAM,uBAAwBjP,MAAOkM,EAAEwE,WA0E7CE,eA7Fe,SAAC1E,GACpBsD,aAAaC,QAAQ,aAAcvD,EAAElM,MAAM,KAC3C6O,EAAS,CAACI,KAAM,mBAAoBjP,MAAOkM,EAAElM,SAC7C+L,EAAAA,EAAAA,OA2FI8E,eAxEe,SAAC7Q,GACpB6O,EAAS,CAACI,KAAM,yBAA0BjP,MAAOA","sources":["components/appHeader/Header.js","../node_modules/react-colorful/src/hooks/useEventCallback.ts","../node_modules/react-colorful/src/utils/clamp.ts","../node_modules/react-colorful/src/components/common/Interactive.tsx","../node_modules/react-colorful/src/utils/format.ts","../node_modules/react-colorful/src/components/common/Pointer.tsx","../node_modules/react-colorful/src/utils/round.ts","../node_modules/react-colorful/src/utils/convert.ts","../node_modules/react-colorful/src/components/common/Hue.tsx","../node_modules/react-colorful/src/components/common/Saturation.tsx","../node_modules/react-colorful/src/utils/compare.ts","../node_modules/react-colorful/src/hooks/useColorManipulation.ts","../node_modules/react-colorful/src/utils/nonce.ts","../node_modules/react-colorful/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-colorful/src/hooks/useStyleSheet.ts","../node_modules/react-colorful/src/components/common/ColorPicker.tsx","../node_modules/react-colorful/src/components/HexColorPicker.tsx","components/appColorPicker/useClickOutside.js","components/appColorPicker/PopoverPicker.js","components/appVisualDisplay/VisualDisplay.js","components/appChannelList/ChannelItem.js","components/appChannelList/ChannelList.js","components/pages/MainPage.js","store/actions/actions.js"],"sourcesContent":["import './header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"app__sheet appheadersheet\">\r\n          <div>\r\n            <div className=\"appheadersheet__title\">SoundVisualMachine</div>\r\n            <marquee className=\"appheadersheet__info\" direction=\"left\" scrollamount=\"4\">Добро пожаловать в SoundVisualMachine!!! Это приложение для анализа звукового потока в реальном времени и дальнейшее его сопровождение цветовой поддержкой - цветомузыка онлайн на экране вашего монитора. приложение имеет простые, но в то же время гибкие настройки деления звукового потока на частоты, а так же удобные настройки визуального цветового сопровождения. я надеюсь вы найдете это приложение интересным для себя. вопросы и пожелания можете направлять на почту: enginpro@yandex.ru  . желаю приятного времяпровождения!;)</marquee>\r\n          </div>\r\n        </div>        \r\n    );\r\n  }\r\n  \r\n  export default Header;","import { useRef } from \"react\";\n\n// Saves incoming handler to the ref in order to avoid \"useCallback hell\"\nexport function useEventCallback<T>(handler?: (value: T) => void): (value: T) => void {\n  const callbackRef = useRef(handler);\n  const fn = useRef((value: T) => {\n    callbackRef.current && callbackRef.current(value);\n  });\n  callbackRef.current = handler;\n\n  return fn.current;\n}\n","// Clamps a value between an upper and lower bound.\n// We use ternary operators because it makes the minified code\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\nexport const clamp = (number: number, min = 0, max = 1): number => {\n  return number > max ? max : number < min ? min : number;\n};\n","import React, { useRef, useMemo, useEffect } from \"react\";\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { clamp } from \"../../utils/clamp\";\n\nexport interface Interaction {\n  left: number;\n  top: number;\n}\n\n// Check if an event was triggered by touch\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent => \"touches\" in event;\n\n// Finds a proper touch point by its identifier\nconst getTouchPoint = (touches: TouchList, touchId: null | number): Touch => {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === touchId) return touches[i];\n  }\n  return touches[0];\n};\n\n// Finds the proper window object to fix iframe embedding issues\nconst getParentWindow = (node?: HTMLDivElement | null): Window => {\n  return (node && node.ownerDocument.defaultView) || self;\n};\n\n// Returns a relative position of the pointer inside the node's bounding box\nconst getRelativePosition = (\n  node: HTMLDivElement,\n  event: MouseEvent | TouchEvent,\n  touchId: null | number\n): Interaction => {\n  const rect = node.getBoundingClientRect();\n\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\n  const pointer = isTouch(event) ? getTouchPoint(event.touches, touchId) : (event as MouseEvent);\n\n  return {\n    left: clamp((pointer.pageX - (rect.left + getParentWindow(node).pageXOffset)) / rect.width),\n    top: clamp((pointer.pageY - (rect.top + getParentWindow(node).pageYOffset)) / rect.height),\n  };\n};\n\n// Browsers introduced an intervention, making touch events passive by default.\n// This workaround removes `preventDefault` call from the touch handlers.\n// https://github.com/facebook/react/issues/19651\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\n  !isTouch(event) && event.preventDefault();\n};\n\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\n// If we detected a touch interaction before, we prefer reacting to touch events only.\nconst isInvalid = (event: MouseEvent | TouchEvent, hasTouch: boolean): boolean => {\n  return hasTouch && !isTouch(event);\n};\n\ninterface Props {\n  onMove: (interaction: Interaction) => void;\n  onKey: (offset: Interaction) => void;\n  children: React.ReactNode;\n}\n\nconst InteractiveBase = ({ onMove, onKey, ...rest }: Props) => {\n  const container = useRef<HTMLDivElement>(null);\n  const onMoveCallback = useEventCallback<Interaction>(onMove);\n  const onKeyCallback = useEventCallback<Interaction>(onKey);\n  const touchId = useRef<null | number>(null);\n  const hasTouch = useRef(false);\n\n  const [handleMoveStart, handleKeyDown, toggleDocumentEvents] = useMemo(() => {\n    const handleMoveStart = ({ nativeEvent }: React.MouseEvent | React.TouchEvent) => {\n      const el = container.current;\n      if (!el) return;\n\n      // Prevent text selection\n      preventDefaultMove(nativeEvent);\n\n      if (isInvalid(nativeEvent, hasTouch.current) || !el) return;\n\n      if (isTouch(nativeEvent)) {\n        hasTouch.current = true;\n        const changedTouches = nativeEvent.changedTouches || [];\n        if (changedTouches.length) touchId.current = changedTouches[0].identifier;\n      }\n\n      el.focus();\n      onMoveCallback(getRelativePosition(el, nativeEvent, touchId.current));\n      toggleDocumentEvents(true);\n    };\n\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      // Prevent text selection\n      preventDefaultMove(event);\n\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\n      // without pressing it down\n      const isDown = isTouch(event) ? event.touches.length > 0 : event.buttons > 0;\n\n      if (isDown && container.current) {\n        onMoveCallback(getRelativePosition(container.current, event, touchId.current));\n      } else {\n        toggleDocumentEvents(false);\n      }\n    };\n\n    const handleMoveEnd = () => toggleDocumentEvents(false);\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      const keyCode = event.which || event.keyCode;\n\n      // Ignore all keys except arrow ones\n      if (keyCode < 37 || keyCode > 40) return;\n      // Do not scroll page by arrow keys when document is focused on the element\n      event.preventDefault();\n      // Send relative offset to the parent component.\n      // We use codes (37←, 38↑, 39→, 40↓) instead of keys ('ArrowRight', 'ArrowDown', etc)\n      // to reduce the size of the library\n      onKeyCallback({\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\n      });\n    };\n\n    function toggleDocumentEvents(state?: boolean) {\n      const touch = hasTouch.current;\n      const el = container.current;\n      const parentWindow = getParentWindow(el);\n\n      // Add or remove additional pointer event listeners\n      const toggleEvent = state ? parentWindow.addEventListener : parentWindow.removeEventListener;\n      toggleEvent(touch ? \"touchmove\" : \"mousemove\", handleMove);\n      toggleEvent(touch ? \"touchend\" : \"mouseup\", handleMoveEnd);\n    }\n\n    return [handleMoveStart, handleKeyDown, toggleDocumentEvents];\n  }, [onKeyCallback, onMoveCallback]);\n\n  // Remove window event listeners before unmounting\n  useEffect(() => toggleDocumentEvents, [toggleDocumentEvents]);\n\n  return (\n    <div\n      {...rest}\n      onTouchStart={handleMoveStart}\n      onMouseDown={handleMoveStart}\n      className=\"react-colorful__interactive\"\n      ref={container}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"slider\"\n    />\n  );\n};\n\nexport const Interactive = React.memo(InteractiveBase);\n","export const formatClassName = (names: unknown[]): string => names.filter(Boolean).join(\" \");\n","import React from \"react\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props {\n  className?: string;\n  top?: number;\n  left: number;\n  color: string;\n}\n\nexport const Pointer = ({ className, color, left, top = 0.5 }: Props): JSX.Element => {\n  const nodeClassName = formatClassName([\"react-colorful__pointer\", className]);\n\n  const style = {\n    top: `${top * 100}%`,\n    left: `${left * 100}%`,\n  };\n\n  return (\n    <div className={nodeClassName} style={style}>\n      <div className=\"react-colorful__pointer-fill\" style={{ backgroundColor: color }} />\n    </div>\n  );\n};\n","export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\n  return Math.round(base * number) / base;\n};\n","import { round } from \"./round\";\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"../types\";\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\n\nexport const hexToRgba = (hex: string): RgbaColor => {\n  if (hex[0] === \"#\") hex = hex.substr(1);\n\n  if (hex.length < 6) {\n    return {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: 1,\n    };\n  }\n\n  return {\n    r: parseInt(hex.substr(0, 2), 16),\n    g: parseInt(hex.substr(2, 2), 16),\n    b: parseInt(hex.substr(4, 2), 16),\n    a: 1,\n  };\n};\n\nexport const parseHue = (value: string, unit = \"deg\"): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : 100 - l) / 100;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * 100 : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\n\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / 100;\n\n  return {\n    h: round(h),\n    s: round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: round(hh / 2),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  return `hsl(${h}, ${s}%, ${l}%)`;\n};\n\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\n  const { h, s, v } = roundHsva(hsva);\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\n  const { h, s, v, a } = roundHsva(hsva);\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  h = (h / 360) * 6;\n  s = s / 100;\n  v = v / 100;\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    module = hh % 6;\n\n  return {\n    r: round([v, c, b, b, d, v][module] * 255),\n    g: round([d, v, v, c, b, b][module] * 255),\n    b: round([b, b, d, v, v, c][module] * 255),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return roundHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\n\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\nconst format = (number: number) => {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\" + hex : hex;\n};\n\nexport const rgbaToHex = ({ r, g, b }: RgbaColor): string => {\n  return \"#\" + format(r) + format(g) + format(b);\n};\n\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a,\n  };\n};\n\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\n  h: round(hsva.h),\n  s: round(hsva.s),\n  v: round(hsva.v),\n  a: round(hsva.a, 2),\n});\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\n\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\n\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\n  const { h, s, v } = roundHsva(hsva);\n  return { h, s, v };\n};\n","import React from \"react\";\n\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\n\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { formatClassName } from \"../../utils/format\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  className?: string;\n  hue: number;\n  onChange: (newHue: { h: number }) => void;\n}\n\nconst HueBase = ({ className, hue, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ h: 360 * interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    onChange({\n      h: clamp(hue + offset.left * 360, 0, 360),\n    });\n  };\n\n  const nodeClassName = formatClassName([\"react-colorful__hue\", className]);\n\n  return (\n    <div className={nodeClassName}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Hue\"\n        aria-valuetext={round(hue)}\n      >\n        <Pointer\n          className=\"react-colorful__hue-pointer\"\n          left={hue / 360}\n          color={hsvaToHslString({ h: hue, s: 100, v: 100, a: 1 })}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Hue = React.memo(HueBase);\n","import React from \"react\";\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\nimport { HsvaColor } from \"../../types\";\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  hsva: HsvaColor;\n  onChange: (newColor: { s: number; v: number }) => void;\n}\n\nconst SaturationBase = ({ hsva, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({\n      s: interaction.left * 100,\n      v: 100 - interaction.top * 100,\n    });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Saturation and brightness always fit into [0, 100] range\n    onChange({\n      s: clamp(hsva.s + offset.left * 100, 0, 100),\n      v: clamp(hsva.v - offset.top * 100, 0, 100),\n    });\n  };\n\n  const containerStyle = {\n    backgroundColor: hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 }),\n  };\n\n  return (\n    <div className=\"react-colorful__saturation\" style={containerStyle}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Color\"\n        aria-valuetext={`Saturation ${round(hsva.s)}%, Brightness ${round(hsva.v)}%`}\n      >\n        <Pointer\n          className=\"react-colorful__saturation-pointer\"\n          top={1 - hsva.v / 100}\n          left={hsva.s / 100}\n          color={hsvaToHslString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Saturation = React.memo(SaturationBase);\n","import { hexToRgba } from \"./convert\";\nimport { ObjectColor } from \"../types\";\n\nexport const equalColorObjects = (first: ObjectColor, second: ObjectColor): boolean => {\n  if (first === second) return true;\n\n  for (const prop in first) {\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\n    // there is or not), and then as a type TS can iterate over.\n    if (\n      ((first as unknown) as Record<string, number>)[prop] !==\n      ((second as unknown) as Record<string, number>)[prop]\n    )\n      return false;\n  }\n\n  return true;\n};\n\nexport const equalColorString = (first: string, second: string): boolean => {\n  return first.replace(/\\s/g, \"\") === second.replace(/\\s/g, \"\");\n};\n\nexport const equalHex = (first: string, second: string): boolean => {\n  if (first.toLowerCase() === second.toLowerCase()) return true;\n\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\n  return equalColorObjects(hexToRgba(first), hexToRgba(second));\n};\n","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { ColorModel, AnyColor, HsvaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { useEventCallback } from \"./useEventCallback\";\n\nexport function useColorManipulation<T extends AnyColor>(\n  colorModel: ColorModel<T>,\n  color: T,\n  onChange?: (color: T) => void\n): [HsvaColor, (color: Partial<HsvaColor>) => void] {\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\n  const onChangeCallback = useEventCallback<T>(onChange);\n\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\n  // all internal calculations are based on HSVA model\n  const [hsva, updateHsva] = useState<HsvaColor>(() => colorModel.toHsva(color));\n\n  // By using this ref we're able to prevent extra updates\n  // and the effects recursion during the color conversion\n  const cache = useRef({ color, hsva });\n\n  // Update local HSVA-value if `color` property value is changed,\n  // but only if that's not the same color that we just sent to the parent\n  useEffect(() => {\n    if (!colorModel.equal(color, cache.current.color)) {\n      const newHsva = colorModel.toHsva(color);\n      cache.current = { hsva: newHsva, color };\n      updateHsva(newHsva);\n    }\n  }, [color, colorModel]);\n\n  // Trigger `onChange` callback only if an updated color is different from cached one;\n  // save the new color to the ref to prevent unnecessary updates\n  useEffect(() => {\n    let newColor;\n    if (\n      !equalColorObjects(hsva, cache.current.hsva) &&\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva)), cache.current.color)\n    ) {\n      cache.current = { hsva, color: newColor };\n      onChangeCallback(newColor);\n    }\n  }, [hsva, colorModel, onChangeCallback]);\n\n  // Merge the current HSVA color object with updated params.\n  // For example, when a child component sends `h` or `s` only\n  const handleChange = useCallback((params: Partial<HsvaColor>) => {\n    updateHsva((current) => Object.assign({}, current, params));\n  }, []);\n\n  return [hsva, handleChange];\n}\n","declare const __webpack_nonce__: string | undefined;\nlet nonce: string | undefined;\n\n/**\n * Returns a nonce hash included by Webpack or the one defined manually by developer.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n * https://webpack.js.org/guides/csp/\n */\nexport const getNonce = (): string | undefined => {\n  if (nonce) return nonce;\n  if (typeof __webpack_nonce__ !== \"undefined\") return __webpack_nonce__;\n  return undefined;\n};\n\n/**\n * Signs the style tag with a base64-encoded string (nonce) to conforms to Content Security Policies.\n * This function has to be invoked before any picker is rendered if you aren't using Webpack for CSP.\n */\nexport const setNonce = (hash: string): void => {\n  nonce = hash;\n};\n","import { useLayoutEffect, useEffect } from \"react\";\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { RefObject } from \"react\";\n\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { getNonce } from \"../utils/nonce\";\n\n// Bundler is configured to load this as a processed minified CSS-string\nimport styles from \"../css/styles.css\";\n\nconst styleElementMap: Map<Document, HTMLStyleElement> = new Map();\n\n/**\n * Injects CSS code into the document's <head>\n */\nexport const useStyleSheet = (nodeRef: RefObject<HTMLDivElement>): void => {\n  useIsomorphicLayoutEffect(() => {\n    const parentDocument = nodeRef.current ? nodeRef.current.ownerDocument : document;\n\n    if (typeof parentDocument !== \"undefined\" && !styleElementMap.has(parentDocument)) {\n      const styleElement = parentDocument.createElement(\"style\");\n      styleElement.innerHTML = styles;\n      styleElementMap.set(parentDocument, styleElement);\n\n      // Conform to CSP rules by setting `nonce` attribute to the inline styles\n      const nonce = getNonce();\n      if (nonce) styleElement.setAttribute(\"nonce\", nonce);\n\n      parentDocument.head.appendChild(styleElement);\n    }\n  }, []);\n};\n","import React, { useRef } from \"react\";\n\nimport { Hue } from \"./Hue\";\nimport { Saturation } from \"./Saturation\";\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>;\n}\n\nexport const ColorPicker = <T extends AnyColor>({\n  className,\n  colorModel,\n  color = colorModel.defaultColor,\n  onChange,\n  ...rest\n}: Props<T>): JSX.Element => {\n  const nodeRef = useRef<HTMLDivElement>(null);\n  useStyleSheet(nodeRef);\n\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\n\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\n\n  return (\n    <div {...rest} ref={nodeRef} className={nodeClassName}>\n      <Saturation hsva={hsva} onChange={updateHsva} />\n      <Hue hue={hsva.h} onChange={updateHsva} className=\"react-colorful__last-control\" />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalHex } from \"../utils/compare\";\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"000\",\n  toHsva: hexToHsva,\n  fromHsva: hsvaToHex,\n  equal: equalHex,\n};\n\nexport const HexColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n","import { useEffect } from \"react\";\r\n\r\n// Improved version of https://usehooks.com/useOnClickOutside/\r\nconst useClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    let startedInside = false;\r\n    let startedWhenMounted = false;\r\n\r\n    const listener = (event) => {\r\n      // Do nothing if `mousedown` or `touchstart` started inside ref element\r\n      if (startedInside || !startedWhenMounted) return;\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) return;\r\n\r\n      handler(event);\r\n    };\r\n\r\n    const validateEventStart = (event) => {\r\n      startedWhenMounted = ref.current;\r\n      startedInside = ref.current && ref.current.contains(event.target);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", validateEventStart);\r\n    document.addEventListener(\"touchstart\", validateEventStart);\r\n    document.addEventListener(\"click\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", validateEventStart);\r\n      document.removeEventListener(\"touchstart\", validateEventStart);\r\n      document.removeEventListener(\"click\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n\r\nexport default useClickOutside;\r\n","import React, { useCallback, useRef, useState } from \"react\";\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport {useDebouncyEffect} from \"use-debouncy\";\r\n\r\nimport useClickOutside from \"./useClickOutside\";\r\n\r\nexport const PopoverPicker = ({ color, onChange }) => {\r\n  const popover = useRef();\r\n  const [isOpen, toggle] = useState(false);\r\n  const [value, setValue] = useState(color);\r\n\r\n  const close = useCallback(() => toggle(false), []);\r\n  useClickOutside(popover, close);\r\n\r\n  useDebouncyEffect(() => onChange(value), 200, [value]);\r\n \r\n  return (\r\n    <div className=\"picker\">\r\n      <div\r\n        className=\"swatch\"\r\n        style={{ background: `linear-gradient(to top, #000000, ${color}, #000000) ` }}\r\n        onClick={() => toggle(true)}\r\n      />\r\n\r\n      {isOpen && (\r\n        <div className=\"popover\" ref={popover}>\r\n          <HexColorPicker color={value} onChange={setValue}/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};","import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { initState } from '../../services/appProcessor';\r\nimport { PopoverPicker } from '../appColorPicker/PopoverPicker';\r\n\r\nimport Actions from '../../store/actions/actions';\r\n\r\nimport './visualDisplay.scss';\r\n\r\nconst VisualDisplay = () => {\r\n    const {changeFillStatus, onChangeRate, changeSuppression, changeColor, changePeaksStatus, addChannels} = Actions();\r\n    const rate = useSelector(state => state.rate)\r\n    const fillStatus = useSelector(state => state.fillStatus)\r\n    const renderColor = useSelector(state => state.renderColor)\r\n    const peaksStatus = useSelector(state => state.peaksStatus)\r\n    const suppression = useSelector(state => state.suppression)\r\n    \r\n    const [color, setColor] = useState(renderColor)\r\n\r\n    const freq = () => {\r\n        let cons\r\n        const frequencyGenerated = (max, steep, dots, mdots) => {\r\n            cons = mdots + ' 0 ';\r\n            for (let i = 0 + steep ; i < max ; i += steep){\r\n                cons += `${dots} ${i} `;\r\n            } cons += mdots;            \r\n        }\r\n        \r\n        const variations = [\r\n            257, 8, '........', '..', \r\n            206, 6, '.......', '.....',\r\n            93, 2, '....', '..',\r\n            512, 14, '.....', '..',\r\n            1024, 24, '..', '..']\r\n        \r\n        let num = 0\r\n        switch (rate) {\r\n            case 1024:\r\n                num = 4                \r\n            break;\r\n            case 512:\r\n                num = 3                \r\n            break;\r\n            case 255:\r\n                num = 0                \r\n            break;\r\n            case 204:\r\n                num = 1                \r\n            break;\r\n            case 92:\r\n                num = 2\r\n            break;\r\n            default://\r\n        }  \r\n        frequencyGenerated(\r\n            variations[4*num],\r\n            variations[4*num+1],\r\n            variations[4*num+2],\r\n            variations[4*num+3],)   \r\n            return cons;      \r\n    }\r\n\r\n    useEffect(()=>{\r\n        initState();\r\n        changeColor(color)\r\n    })   \r\n\r\n    return (\r\n        <div id='visualDisplay' className=\"app__sheet visualdisplaysheet\">\r\n            <div className='app__flex__between'>\r\n            <div className=\"app__title\">Отрисовка потока</div>\r\n                <div className='app__flex'>\r\n                    <section className=\"small example\">\r\n                        <PopoverPicker color={color} onChange={setColor}/>\r\n                    </section>\r\n                    <section>\r\n                        <select \r\n                            defaultValue={fillStatus}\r\n                            onChange={(e) => changeFillStatus(e.target)}>\r\n                                <option value=\"1\">Вариант отрисовки: Заливка</option>\r\n                                <option value=\"0\">Вариант отрисовки: Контуры</option>\r\n                        </select>\r\n                    </section>\r\n                    <section>\r\n                        <select \r\n                            defaultValue={peaksStatus}\r\n                            onChange={(e) => changePeaksStatus(e.target)}>\r\n                                <option value=\"1\">Пики: Да</option>\r\n                                <option value=\"0\">Пики: Нет</option>\r\n                        </select>\r\n                    </section>\r\n                    <section>\r\n                        <select \r\n                            defaultValue={suppression}\r\n                            onChange={(e) => changeSuppression(e.target)}>\r\n                                <option value=\"0\">Подавление: Нет</option>\r\n                                <option value=\"1.2\">Подавление: 1.2</option>\r\n                                <option value=\"1.5\">Подавление: 1.5</option>\r\n                                <option value=\"1.8\">Подавление: 1.8</option>\r\n                                <option value=\"2.0\">Подавление: 2.0</option>\r\n                        </select>\r\n                    </section>\r\n                    <section>\r\n                        <select \r\n                            defaultValue={rate}\r\n                            onChange={(e) => onChangeRate(e.target)}>\r\n                                <option value=\"1024\">Диапазон: 1024 выборок из потока</option>\r\n                                <option value=\"512\">Диапазон: 512 выборок из потока</option>\r\n                                <option value=\"255\">Диапазон: 255 выборок из потока</option>\r\n                                <option value=\"204\">Диапазон: 204 выборки из потока</option>\r\n                                <option value=\"92\">Диапазон: 92 выборки из потока</option>\r\n                                {/* <option value=\"44\">Mode: 45 samples</option> */}\r\n                        </select>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n            <canvas id='canvasDisplay'></canvas>\r\n            <div className=\"visualdisplaysheet__center\">\r\n                <div className=\"visualdisplaysheet__freq\">{freq()}</div>\r\n            </div> \r\n            <div className='app__line'></div>  \r\n            <div>\r\n                <span className=\"app__title\">Управление каналами:</span>\r\n                <button onClick={addChannels}>ДОБАВИТЬ НОВЫЙ</button>\r\n            </div>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VisualDisplay;","import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { PopoverPicker } from '../appColorPicker/PopoverPicker';\r\nimport Actions from '../../store/actions/actions';\r\n\r\nconst ChannelItem = ({id}) => {\r\n    const { changeSampleColor, \r\n            assembleChange, \r\n            rearChange, \r\n            frontChange, \r\n            reactionChange,\r\n            deleteChannel,\r\n            changeMinChannel,\r\n            changeMaxChannel} = Actions();\r\n\r\n    const rate = useSelector(state => state.rate)\r\n    const {channels} = useSelector(state => state)  \r\n    const [color, setColor] = useState(channels[id].color)\r\n    \r\n    const divId = `div${id}`;\r\n    const inId = `in${id}`;\r\n    const trId = `tr${id}`;\r\n    const ufId = `uf${id}`;\r\n    const urId = `ur${id}`;\r\n    const dfId = `df${id}`;\r\n    const drId = `dr${id}`;\r\n    \r\n    const elements = (max) => {\r\n        const arr = []\r\n        for (let i = 0; i <= max ; i ++){\r\n            arr.push(<option key={i} value={i}>{i}</option>)  \r\n        } return arr               \r\n    }   \r\n\r\n    useEffect(() => {\r\n        changeSampleColor(color, id)\r\n    }, [color])\r\n\r\n    return (\r\n        <div className=\"app__sheet channellist\">\r\n            <div className='app__flex__between'>\r\n                <div className=\"app__title\">Канал : {channels[id].mark}</div>\r\n                <div className='app__flex'>\r\n                    <div>\r\n                        <section className=\"small example\">\r\n                            <PopoverPicker color={color} onChange={setColor}/>\r\n                        </section>\r\n                    </div>\r\n                    <div>\r\n                        {id > 0 ? <button \r\n                            className='closebutton' \r\n                            id={id}\r\n                            onClick={(e) => deleteChannel(e.target.id)}\r\n                            >УДАЛИТЬ КАНАЛ</button>: null\r\n                        }\r\n                    </div>                   \r\n                </div>              \r\n            </div>            \r\n            <div className=\"app__line\"></div>\r\n            <div className=\"app__flex__between\">\r\n                <div className=\"app__center\">\r\n                    <div className=\"app__navtext\">Начало</div>\r\n                    <select \r\n                        className=\"channellist__select\" \r\n                        size={4}\r\n                        value={channels[id].min}\r\n                        id={id}\r\n                        onChange={(e) => changeMinChannel(e.target, id)}>\r\n                        {elements(rate)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center\">\r\n                    <div className=\"app__navtext\">Конец</div>\r\n                    <select \r\n                        className=\"channellist__select\" \r\n                        size={4}\r\n                        value={channels[id].max}\r\n                        id={id}\r\n                        onChange={(e) => changeMaxChannel(e.target, id)}>\r\n                        {elements(rate)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>от выборки</div>\r\n                    <div className='app__bkg channellist__text'>{channels[id].min}</div>\r\n                    <div className='app__navtext'>по выборку</div>\r\n                    <div className='app__bkg channellist__text'>{channels[id].max}</div>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>Вариант сборки канала</div>\r\n                    <select                 \r\n                        className=\"channellist__select\"\r\n                        id={id}\r\n                        size={4}\r\n                        value={channels[id].assemble}\r\n                        onChange={(e) => assembleChange(e.target, id)}> \r\n                            <option value=\"average\">Среднее от выбранных</option>\r\n                            <option value=\"maximum\">Максимальный из выбранных</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>Визуальное представление собранного канала</div>\r\n                    <div className='channellist__renderarea app__bkg'>    \r\n                        <div className='div' id={divId}></div>\r\n                        <div className='indicator' id={inId}></div>\r\n                        <div className='markers up' id={ufId}></div>\r\n                        <div className='markers up' id={urId}></div>\r\n                        <div className='markers down' id={dfId}></div>\r\n                        <div className='markers down' id={drId}></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>Пик</div>\r\n                    <div className='app__bkg'>\r\n                        <div className='channellist__triggeringarea' id={trId}></div>\r\n                    </div>                     \r\n                </div>            \r\n                    <div className=\"app__center ml\">\r\n                        <div className=\"app__navtext\">Тыл</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            size={4}\r\n                            value={channels[id].rear}\r\n                            id={id}\r\n                            onChange={(e) => rearChange(e.target, id)}>\r\n                            {elements(50)}\r\n                        </select>\r\n                    </div>                  \r\n                    <div className=\"app__center\">\r\n                        <div className=\"app__navtext\">Фронт</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            size={4}\r\n                            value={channels[id].front}\r\n                            id={id}\r\n                            onChange={(e) => frontChange(e.target, id)}>\r\n                            {elements(50)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"app__center ml\">\r\n                        <div className='app__navtext'>буфер фронта</div>\r\n                        <div className='app__bkg channellist__text'>{channels[id].front}</div>\r\n                        <div className='app__navtext'>буфер тыла</div>\r\n                        <div className='app__bkg channellist__text'>{channels[id].rear}</div>\r\n                    </div>\r\n                    <div className=\"app__center ml\">\r\n                        <div className=\"app__navtext\">реакция</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            id={id}\r\n                            value={channels[id].reaction}\r\n                            size={4}\r\n                            onChange={(e) => reactionChange(e.target, id)}>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                    </div> \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelItem;","import ChannelItem from './ChannelItem';\r\nimport { useSelector } from 'react-redux';\r\nimport './channelList.scss'\r\n\r\nconst ChannelList = () => {\r\n    const {channels} = useSelector(state => state);\r\n\r\n    const items = channels.map((item, i) => {\r\n            return <ChannelItem key={i} id={i}/>       \r\n    })\r\n\r\n    return (\r\n       <>\r\n            {items}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default ChannelList;","import { lazy, Suspense } from \"react\";\r\nimport Header from \"../appHeader/Header\";\r\nimport VisualDisplay from \"../appVisualDisplay/VisualDisplay\";\r\nimport ChannelList from \"../appChannelList/ChannelList\";\r\n\r\nconst LedSettings = lazy(() => import('../appLedSettings/LedSettings'));\r\nconst LedSettingsMini = lazy(() => import('../appLedSettingsMini/LedSettingsMini'));\r\n\r\nconst MainPage = () => {\r\n   \r\n    return (\r\n        <div >            \r\n            <Header/>   \r\n                <div  id='Header'></div>\r\n                <div id='compensating'></div> \r\n                <Suspense fallback=\"Loading...\">\r\n                    <div className=\"app__flex\"> \r\n                        <div>                        \r\n                            <VisualDisplay/>\r\n                            {window.innerWidth < 1500 ? <LedSettingsMini/> : null}              \r\n                            <ChannelList/>\r\n                        </div>\r\n                        <div>\r\n                            {window.innerWidth > 1500 ? <LedSettings/> : null} \r\n                        </div>\r\n                    </div>   \r\n                </Suspense>            \r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { initMarkers } from '../../services/appDisplayDrawingProcessor';\r\nimport { initState } from \"../../services/appProcessor\";\r\nimport { hrefInition } from \"../../services/appDisplayDrawingProcessor\";\r\n\r\nconst Actions = () => {\r\n    const dispatch = useDispatch();\r\n    const channels = useSelector(state => state.channels)\r\n    const fullScreen = useSelector(state => state.fullScreen)\r\n\r\n    const changeFillStatus = (e) => {        \r\n        localStorage.setItem('fillStatus', e.value)\r\n        dispatch({type: 'CHANGE_FILL_STATUS', fill: e.value});\r\n    }\r\n\r\n    const changeMaxChannel = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].max = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n\r\n        if(e.value < channels[i].min){\r\n            changeMinChannel(e, i);\r\n        }\r\n        initMarkers(); \r\n    }\r\n\r\n    const changeMinChannel = (e, i) => {         \r\n        const tempArr = channels;\r\n        tempArr[i].min = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n\r\n        if(e.value > channels[i].max){\r\n            changeMaxChannel(e, i);\r\n        }\r\n        initMarkers();\r\n    }\r\n\r\n    const changeVisMode = (e) => {        \r\n        localStorage.setItem('rate', e.value)\r\n        dispatch({type: 'CHANGE_VISMODE', rate: e.value})\r\n    }\r\n\r\n    const changeSuppression = (e) => {        \r\n        localStorage.setItem('suppression', e.value)\r\n        dispatch({type: 'CHANGE_SUPPRESSION', suppression: e.value})\r\n    }\r\n\r\n    const changeColor = (e) => {    \r\n        // const res = JSON.stringify(e).replace(/[{rgb:\"}]/g, '') \r\n        localStorage.setItem('renderColor', e)\r\n        dispatch({type: 'CHANGE_COLOR', color: e})\r\n    }\r\n\r\n    const changePeaksStatus = (e) => {        \r\n        localStorage.setItem('peaksStatus', e.value)\r\n        dispatch({type: 'CHANGE_PEAKS_STATUS', peaks: e.value})\r\n    }\r\n\r\n    const changeSampleColor = (color, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].color = color\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n        initMarkers();\r\n    }\r\n\r\n    const assembleChange = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].assemble = e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })        \r\n    }\r\n\r\n    const rearChange = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].rear = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n    }\r\n\r\n    const frontChange = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].front = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n    }\r\n\r\n    const reactionChange = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].reaction = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n    }\r\n\r\n    const changeLightUp = (e) => {   \r\n        localStorage.setItem('opacityUp', e.value/1000)\r\n        dispatch({type: 'CHANGE_LIGHT_UP', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeLightDown = (e) => {        \r\n        localStorage.setItem('opacityDown', e.value/1000)\r\n        dispatch({type: 'CHANGE_LIGHT_DOWN', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeLightMax = (e) => {        \r\n        localStorage.setItem('opacityMax', e.value/100)\r\n        dispatch({type: 'CHANGE_LIGHT_MAX', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeVis = (e) => {        \r\n        localStorage.setItem('visSet', e.value)\r\n        dispatch({type: 'CHANGE_VISUAL_SETTINGS', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const visBorChange = (e) => {        \r\n        localStorage.setItem('visBor', e.checked)\r\n        dispatch({type: 'CHANGE_BORDER_STATUS', value: e.checked})\r\n    }\r\n\r\n    const visLabChange = (e) => {   \r\n        localStorage.setItem('visLab', e.checked)     \r\n        dispatch({type: 'CHANGE_LABELS_STATUS', value: e.checked})\r\n    }\r\n\r\n    const fullScreenMode = (value) => {\r\n        dispatch({type: 'CHANGE_FULLSCREEN_MODE', value: value})\r\n    }\r\n\r\n    const onChangeRate = (e) => {\r\n        changeVisMode(e)\r\n        channels.forEach((item, i) => {\r\n            if(item.max > +e.value) {\r\n                changeMaxChannel(e, i)\r\n            }\r\n            if(item.min > +e.value) {\r\n                changeMinChannel(e, i)\r\n            }\r\n        });\r\n    }\r\n\r\n    const addChannels = () => {\r\n        const abc = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\r\n        let res = abc.find(i => !channels.map(item => item.mark).includes(i))\r\n        if(channels.length < 10){\r\n            const tempArr = channels;\r\n            tempArr.push (\r\n                {mark: res, min: 0, max: 0, \r\n                color: '#ffffff', \r\n                assemble: 'maximum', rear: 28, \r\n                front: 10, reaction: 2})\r\n         \r\n        tempArr.sort((a, b) => {\r\n            if(a.mark < b.mark) return -1;\r\n            if(a.mark > b.mark) return 1;\r\n            })\r\n\r\n            dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n            initMarkers();\r\n        }\r\n    }\r\n    \r\n    const deleteChannel = (i) => {\r\n        const tempArr = channels;\r\n        tempArr.splice(+i, 1);   \r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n        initMarkers();\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({type: 'CHANGE_HREFINIT', hrefInit: hrefInition(), initHref: window.location.href })\r\n    }, [fullScreen])\r\n    \r\n    //localstorage\r\n    localStorage.setItem('channels', JSON.stringify(channels))\r\n\r\n    return {changeFillStatus, \r\n            addChannels,\r\n            onChangeRate, \r\n            changeColor, \r\n            changePeaksStatus, \r\n            changeSampleColor,\r\n            assembleChange,\r\n            rearChange,\r\n            frontChange,\r\n            reactionChange,\r\n            deleteChannel,\r\n            changeMinChannel,\r\n            changeMaxChannel,\r\n            changeLightUp,\r\n            changeLightDown,\r\n            changeVis,\r\n            changeSuppression,\r\n            visBorChange,\r\n            visLabChange,\r\n            changeLightMax,\r\n            fullScreenMode}\r\n}\r\n\r\nexport default Actions;"],"names":["className","direction","scrollamount","useEventCallback","handler","callbackRef","useRef","fn","value","current","clamp","number","min","max","isTouch","event","getParentWindow","node","ownerDocument","defaultView","self","getRelativePosition","touchId","rect","getBoundingClientRect","pointer","touches","i","length","identifier","left","pageX","pageXOffset","width","top","pageY","pageYOffset","height","preventDefaultMove","preventDefault","Interactive","React","onMove","onKey","rest","container","onMoveCallback","onKeyCallback","hasTouch","useMemo","handleMove","buttons","toggleDocumentEvents","handleMoveEnd","state","touch","parentWindow","toggleEvent","addEventListener","removeEventListener","nativeEvent","el","changedTouches","focus","keyCode","which","handleMoveStart","handleKeyDown","useEffect","onTouchStart","onMouseDown","ref","onKeyDown","tabIndex","role","formatClassName","names","filter","Boolean","join","Pointer","color","nodeClassName","style","backgroundColor","round","digits","base","Math","pow","hexToRgba","PI","hex","substr","r","parseInt","g","b","a","hsvaToHsla","s","v","hh","h","l","hsvaToHslString","hsva","hsvaToRgba","floor","c","d","module","format","toString","rgbaToHsva","delta","Hue","hue","onChange","interaction","offset","aria-label","aria-valuetext","Saturation","containerStyle","equalColorObjects","first","second","prop","useColorManipulation","colorModel","onChangeCallback","useState","toHsva","updateHsva","cache","equal","newHsva","newColor","fromHsva","handleChange","useCallback","params","Object","assign","nonce","useIsomorphicLayoutEffect","window","useLayoutEffect","styleElementMap","Map","useStyleSheet","nodeRef","parentDocument","document","has","styleElement","createElement","innerHTML","set","__webpack_nonce__","setAttribute","head","appendChild","ColorPicker","defaultColor","toLowerCase","HexColorPicker","props","startedInside","startedWhenMounted","listener","contains","target","validateEventStart","PopoverPicker","popover","isOpen","toggle","setValue","close","useClickOutside","useDebouncyEffect","background","onClick","Actions","changeFillStatus","onChangeRate","changeSuppression","changeColor","changePeaksStatus","addChannels","rate","useSelector","fillStatus","renderColor","peaksStatus","suppression","setColor","initState","id","defaultValue","e","cons","variations","num","steep","dots","mdots","frequencyGenerated","freq","changeSampleColor","assembleChange","rearChange","frontChange","reactionChange","deleteChannel","changeMinChannel","changeMaxChannel","channels","divId","inId","trId","ufId","urId","dfId","drId","elements","arr","push","mark","size","assemble","rear","front","reaction","items","map","item","LedSettings","lazy","LedSettingsMini","Suspense","fallback","innerWidth","dispatch","useDispatch","fullScreen","tempArr","type","initMarkers","hrefInit","hrefInition","initHref","location","href","localStorage","setItem","JSON","stringify","fill","res","split","find","includes","sort","changeVisMode","forEach","peaks","splice","changeLightUp","changeLightDown","changeVis","visBorChange","checked","visLabChange","changeLightMax","fullScreenMode"],"sourceRoot":""}
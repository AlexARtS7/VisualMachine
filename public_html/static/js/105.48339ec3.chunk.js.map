{"version":3,"file":"static/js/105.48339ec3.chunk.js","mappings":"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","sources":["components/appHeader/Header.js","components/appVisualDisplay/VisualDisplay.js","components/appChannelList/ChannelItem.js","components/appChannelList/ChannelList.js","components/appLedSettings/LedSettings.js","components/pages/MainPage.js","store/actions/actions.js"],"sourcesContent":["import './header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"app__sheet appheadersheet\">\r\n          <div>\r\n            <p className=\"appheadersheet__title\">SoundVisualMachine</p>\r\n            <marquee className=\"appheadersheet__info\" direction=\"left\" scrollamount=\"4\">Real-time sound analyzer SV Sound Machine... Parses the sound stream by frequency and visually plays it. It has settings for the number of channels and their frequency. Setting up visual accompaniment. The possibility of using a computer monitor as a color music installation. Adjust the sound frequencies and their number for clearer visualization..</marquee>\r\n          </div>\r\n        </div>        \r\n    );\r\n  }\r\n  \r\n  export default Header;","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { initMarkers, canvasRender } from '../../services/appDisplayDrawingProcessor';\r\nimport { initState } from '../../services/appProcessor';\r\n\r\nimport Actions from '../../store/actions/actions';\r\n\r\nimport './visualDisplay.scss';\r\n\r\nconst VisualDisplay = () => {\r\n    const {changeFillStatus, onChangeRate, changeColor, changePeaksStatus, addNewChannel} = Actions();\r\n\r\n    const rate = useSelector(state => state.rate)\r\n    const fillStatus = useSelector(state => state.fillStatus)\r\n    const renderColor = useSelector(state => state.renderColor)\r\n    const peaksStatus = useSelector(state => state.peaksStatus)\r\n    const channels = useSelector(state => state.channels)\r\n\r\n    const freq = () => {\r\n        let cons\r\n        const frequencyGenerated = (max, steep, dots, mdots) => {\r\n            cons = mdots + ' 0 ';\r\n            for (let i = 0 + steep ; i < max ; i += steep){\r\n                cons += `${dots} ${i} `;\r\n            } cons += mdots;            \r\n        }\r\n        \r\n        const variations = [\r\n            257, 8, '........', '..', \r\n            206, 6, '.......', '.....',\r\n            93, 2, '....', '..',\r\n            46, 2, '..................', '..']\r\n        \r\n        let num = 0\r\n        switch (rate) {\r\n            case 204:\r\n                num = 1                \r\n            break;\r\n            case 92:\r\n                num = 2\r\n            break;\r\n            default://\r\n        }  \r\n        frequencyGenerated(\r\n            variations[4*num],\r\n            variations[4*num+1],\r\n            variations[4*num+2],\r\n            variations[4*num+3],)   \r\n            return cons;      \r\n    }\r\n\r\n    useEffect(()=>{\r\n        initState();\r\n    })\r\n\r\n    const addChannels = () => {\r\n        const abc = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\r\n        let res = abc.find(i => !channels.map(item => item.mark).includes(i))\r\n        if(channels.length < 10){\r\n            const tempArr = channels;\r\n            tempArr.push (\r\n                {mark: res, min: 0, max: 0, \r\n                color: '0,255,0', \r\n                assemble: 'maximum', rear: 28, \r\n                front: 10, reaction: 2})\r\n         \r\n        tempArr.sort((a, b) => {\r\n            if(a.mark < b.mark) return -1;\r\n            if(a.mark > b.mark) return 1;\r\n            })\r\n            addNewChannel(tempArr);\r\n            initMarkers();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='visualDisplay' className=\"app__sheet visualdisplaysheet\">\r\n            <div className='app__flex__between'>\r\n            <div className=\"app__title\">VisualDisplay</div>\r\n                <div>\r\n                    <select \r\n                    defaultValue={rate}\r\n                    onChange={(e) => onChangeRate(e.target)}>\r\n                        <option value=\"255\">Mode: 255 samples</option>\r\n                        <option value=\"204\">Mode: 204 samples</option>\r\n                        <option value=\"92\">Mode: 92 samples</option>\r\n                        {/* <option value=\"44\">Mode: 45 samples</option> */}\r\n                    </select>\r\n                    <select \r\n                    defaultValue={fillStatus}\r\n                    onChange={(e) => changeFillStatus(e.target)}>\r\n                        <option value=\"1\">Render: Fill</option>\r\n                        <option value=\"0\">Render: Stroke</option>\r\n                    </select>\r\n                    <select \r\n                    defaultValue={renderColor}\r\n                    onChange={(e) => changeColor(e.target)}> \r\n                        <option value=\"0,0,255\">Color: Blue</option>\r\n                        <option value=\"255,0,0\">Color: Red</option>\r\n                        <option value=\"0,255,0\">Color: Green</option>\r\n                        <option value=\"0,255,255\">Color: Aqua</option>\r\n                        <option value=\"255,255,0\">Color: Yellow</option>\r\n                        <option value=\"0, 100, 0\">Color: DarkGreen</option>\r\n                        <option value=\"128, 128, 0\">Color: Olive</option>\r\n                        <option value=\"255, 165, 0\">Color: Orange</option>\r\n                        <option value=\"95, 158, 160\">Color: CadetBlue</option>\r\n                        <option value=\"128, 0, 128\">Color: Purple</option>\r\n                        <option value=\"154, 205, 50\">Color: YellowGreen</option>\r\n                        <option value=\"189, 183, 107\">Color: DarkKhaki</option>\r\n                    </select>\r\n                    <select \r\n                    defaultValue={peaksStatus}\r\n                    onChange={(e) => changePeaksStatus(e.target)}>\r\n                        <option value=\"1\">Peaks: Yes</option>\r\n                        <option value=\"0\">Peaks: No</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <canvas id='canvasDisplay'></canvas>\r\n            <div className=\"visualdisplaysheet__center\">\r\n                <div className=\"visualdisplaysheet__freq\">{freq()}</div>\r\n            </div> \r\n            <div className='app__line'></div>  \r\n            <div>\r\n                <span className=\"app__title\">Controls:</span>\r\n                <button onClick={addChannels}>ADDNEWCHANNEL</button>\r\n            </div>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VisualDisplay;","import { useSelector } from 'react-redux'\r\nimport Actions from '../../store/actions/actions';\r\n\r\nconst ChannelItem = ({id}) => {\r\n    const { changeSampleColor, \r\n            assembleChange, \r\n            rearChange, \r\n            frontChange, \r\n            reactionChange,\r\n            deleteChannel,\r\n            changeMinChannel,\r\n            changeMaxChannel} = Actions();\r\n\r\n    const rate = useSelector(state => state.rate)\r\n    const {channels} = useSelector(state => state)   \r\n    \r\n    const divId = `div${id}`;\r\n    const inId = `in${id}`;\r\n    const trId = `tr${id}`;\r\n    const ufId = `uf${id}`;\r\n    const urId = `ur${id}`;\r\n    const dfId = `df${id}`;\r\n    const drId = `dr${id}`;\r\n    \r\n    const elements = (max) => {\r\n        const arr = []\r\n        for (let i = 0; i <= max ; i ++){\r\n            arr.push(<option key={i} value={i}>{i}</option>)  \r\n        } return arr               \r\n    }   \r\n\r\n    return (\r\n        <div className=\"app__sheet channellist\">\r\n            <div className='app__flex__between'>\r\n                <div className=\"app__title\">Channel : {channels[id].mark}</div>\r\n                <div>\r\n                <select\r\n                    value={channels[id].color}\r\n                    id={id}\r\n                    onChange={(e) => changeSampleColor(e.target)}>\r\n                        <option value=\"0,0,255\">Color: Blue</option>\r\n                        <option value=\"255,0,0\">Color: Red</option>\r\n                        <option value=\"0,255,0\">Color: Green</option>\r\n                        <option value=\"0,255,255\">Color: Aqua</option>\r\n                        <option value=\"255,255,0\">Color: Yellow</option>\r\n                        <option value=\"0, 100, 0\">Color: DarkGreen</option>\r\n                        <option value=\"128, 128, 0\">Color: Olive</option>\r\n                        <option value=\"255, 165, 0\">Color: Orange</option>\r\n                        <option value=\"95, 158, 160\">Color: CadetBlue</option>\r\n                        <option value=\"128, 0, 128\">Color: Purple</option>\r\n                        <option value=\"154, 205, 50\">Color: YellowGreen</option>\r\n                        <option value=\"189, 183, 107\">Color: DarkKhaki</option>\r\n                </select>\r\n                {id > 0 ? <button \r\n                        className='closebutton' \r\n                        id={id}\r\n                        onClick={(e) => deleteChannel(e.target)}\r\n                        >DELETE CHANNEL</button>: null}\r\n                    \r\n                </div>              \r\n            </div>            \r\n            <div className=\"app__line\"></div>\r\n            <div className=\"app__flex__between\">\r\n                <div className=\"app__center\">\r\n                    <div className=\"app__navtext\">Start</div>\r\n                    <select \r\n                        className=\"channellist__select\" \r\n                        size={4}\r\n                        value={channels[id].min}\r\n                        id={id}\r\n                        onChange={(e) => changeMinChannel(e.target, id)}>\r\n                        {elements(rate)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center\">\r\n                    <div className=\"app__navtext\">End</div>\r\n                    <select \r\n                        className=\"channellist__select\" \r\n                        size={4}\r\n                        value={channels[id].max}\r\n                        id={id}\r\n                        onChange={(e) => changeMaxChannel(e.target, id)}>\r\n                        {elements(rate)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>startpoint</div>\r\n                    <div className='app__bkg channellist__text'>{channels[id].min}</div>\r\n                    <div className='app__navtext'>endpoint</div>\r\n                    <div className='app__bkg channellist__text'>{channels[id].max}</div>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>channelAssemble</div>\r\n                    <select                 \r\n                        className=\"channellist__select\"\r\n                        id={id}\r\n                        size={4}\r\n                        value={channels[id].assemble}\r\n                        onChange={(e) => assembleChange(e.target)}> \r\n                            <option value=\"average\">Average of a samples</option>\r\n                            <option value=\"maximum\">Maximum of a samples</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>visualrendering</div>\r\n                    <div className='channellist__renderarea app__bkg'>    \r\n                        <div className='div' id={divId}></div>\r\n                        <div className='indicator' id={inId}></div>\r\n                        <div className='markers up' id={ufId}></div>\r\n                        <div className='markers up' id={urId}></div>\r\n                        <div className='markers down' id={dfId}></div>\r\n                        <div className='markers down' id={drId}></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>triggering</div>\r\n                    <div className='channellist__triggeringarea app__bkg' id={trId}></div> \r\n                </div>            \r\n                    <div className=\"app__center ml\">\r\n                        <div className=\"app__navtext\">rearbuf</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            size={4}\r\n                            value={channels[id].rear}\r\n                            id={id}\r\n                            onChange={(e) => rearChange(e.target)}>\r\n                            {elements(50)}\r\n                        </select>\r\n                    </div>                  \r\n                    <div className=\"app__center\">\r\n                        <div className=\"app__navtext\">frontbuf</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            size={4}\r\n                            value={channels[id].front}\r\n                            id={id}\r\n                            onChange={(e) => frontChange(e.target)}>\r\n                            {elements(50)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"app__center ml\">\r\n                        <div className='app__navtext'>frontbuffer</div>\r\n                        <div className='app__bkg channellist__text'>{channels[id].front}</div>\r\n                        <div className='app__navtext'>rearbuffer</div>\r\n                        <div className='app__bkg channellist__text'>{channels[id].rear}</div>\r\n                    </div>\r\n                    <div className=\"app__center ml\">\r\n                        <div className=\"app__navtext\">reaction</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            id={id}\r\n                            value={channels[id].reaction}\r\n                            size={4}\r\n                            onChange={(e) => reactionChange(e.target)}>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                    </div> \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelItem;","import ChannelItem from './ChannelItem';\r\nimport { useSelector } from 'react-redux';\r\nimport './channelList.scss'\r\n\r\nconst AppChannelList = () => {\r\n\r\n    const {channels} = useSelector(state => state);\r\n\r\n    const items = channels.map((item, i) => {       \r\n        return <ChannelItem key={i} id={i}/>\r\n    })\r\n\r\n    return (\r\n       <>\r\n            {items}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default AppChannelList;","import { useSelector } from 'react-redux'\r\nimport Actions from '../../store/actions/actions'\r\nimport './ledSettings.scss'\r\n\r\nconst LedSettings = () => {\r\n    const { changeLightUp,\r\n            changeLightDown,\r\n            changeLightMax,\r\n            changeVis,\r\n            visBorChange,\r\n            visLabChange,\r\n            fullScreenMode} = Actions()\r\n\r\n    const {channels} = useSelector(state => state)  \r\n    const opacityUp = useSelector(state => state.opacityUp)  \r\n    const opacityDown = useSelector(state => state.opacityDown) \r\n    const opacityMax = useSelector(state => state.opacityMax) \r\n    const visSet = useSelector(state => state.visSet)\r\n    const visLab = useSelector(state => state.visLab)\r\n    const visBor = useSelector(state => state.visBor)\r\n    \r\n    const elements = channels.map((item, i) => {\r\n        const viewId = `view${i}`\r\n        return (\r\n            <div key={i} className='ledsettings__item'>\r\n                {visLab ? <div className='app__navtext'>Ch: {item.mark}</div> : null}\r\n                <div className={visBor ? 'app__bkg ledsettings__view' : 'ledsettings__view'} id={viewId}></div>\r\n            </div>    \r\n        )\r\n    });\r\n\r\n    const items = (max) => {\r\n        const arr = []\r\n        for (let i = 5; i <= max ; i += 5){\r\n            arr.push(<option key={i} value={i}>{i}</option>)  \r\n        } return arr               \r\n    }   \r\n\r\n    return (\r\n            <div id='ledsheet' className='ledsettings app__sheet'>\r\n                <div className='app__flex__between'>\r\n                    <div className=\"app__title\">LightSettings</div>\r\n                    <div className=\"app__title\">channels: {channels.length}</div>\r\n                </div>\r\n                <div className=\"app__line\"></div>\r\n                <div className=\"app__bkg ledsettings__sheet app__flex__between\">\r\n                    {elements}\r\n                </div>\r\n                <div className='app__flex__between'>\r\n                    <div className='app__center'>\r\n                        <div className='app__navtext'>Light Up opacity</div>\r\n                        <div className='app__bkg ledsettings__text'>{Math.floor(opacityUp*1000)}%</div>\r\n                        <select \r\n                            className=\"ledsettings__select\" \r\n                            size={8}\r\n                            value={opacityUp*1000}\r\n                            onChange={(e) => changeLightUp(e.target)}>\r\n                                {items(100)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='app__center'>\r\n                        <div className='app__navtext'>Light Down opacity</div>\r\n                        <div className='app__bkg ledsettings__text'>{Math.floor(opacityDown*1000)}%</div>\r\n                        <select \r\n                            className=\"ledsettings__select\" \r\n                            size={8}\r\n                            value={opacityDown*1000}\r\n                            onChange={(e) => changeLightDown(e.target)}>\r\n                                {items(100)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='app__center'>\r\n                        <div className='app__navtext'>Max opacity</div>\r\n                        <div className='app__bkg ledsettings__text'>{Math.floor(opacityMax*100)}%</div>\r\n                        <select \r\n                            className=\"ledsettings__select\" \r\n                            size={8}\r\n                            value={opacityMax*100}\r\n                            onChange={(e) => changeLightMax(e.target)}>\r\n                                {items(100)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='app__line'></div>\r\n                <div className=\"app__title\">ViewSettings</div>\r\n                <div className='app__line'></div>\r\n                <select \r\n                    className=\"ledsettings__selectS\" \r\n                    size={8}\r\n                    value={visSet}\r\n                    onChange={(e) => changeVis(e.target)}>\r\n                    <option value='none'>None</option>\r\n                    <option value='radialfromcenter'>Radial gradient from the center</option>\r\n                    <option value='radialtocenter'>Radial gradient to the center</option>\r\n                    <option value='linearfromcentervertically'>Linear gradient from the center vertically</option>\r\n                    <option value='lineartocentervertically'>Linear gradient to the center vertically</option>\r\n                    <option value='linearfromcenterhorizontally'>Linear gradient from the center horizontally</option>\r\n                    <option value='lineartocenterhorizontally'>Linear gradient to the center horizontally</option>\r\n                </select>\r\n                <div className='app__line'></div>\r\n                <label htmlFor='visLab' className='app__title'> Labels_: </label>\r\n                <input \r\n                    className='ledsettings__checkbox' \r\n                    name='visLab'\r\n                    checked={visLab}\r\n                    onChange={(e) => visLabChange(e.target)}\r\n                    type=\"checkbox\"/> <br/>\r\n                <label htmlFor='visBor' className='app__title'> Borders: </label>\r\n                <input \r\n                    className='ledsettings__checkbox'\r\n                    name='visBor'\r\n                    checked={visBor} \r\n                    onChange={(e) => visBorChange(e.target)}\r\n                    type=\"checkbox\"/>\r\n                <div className='app__line'></div>\r\n                <button \r\n                    className='ledsettings__button' \r\n                    onClick={() => fullScreenMode(1)}>\r\n                    GO FULLSCREEN</button>\r\n            </div>    \r\n    )\r\n}\r\n\r\nexport default LedSettings;","import Header from \"../appHeader/Header\";\r\nimport VisualDisplay from \"../appVisualDisplay/VisualDisplay\";\r\nimport ChannelList from \"../appChannelList/ChannelList\";\r\nimport LedSettings from \"../appLedSettings/LedSettings\";\r\n\r\nconst MainPage = () => {\r\n \r\n    //sheet fixed\r\n    window.addEventListener('scroll', function(ev) {\r\n        const back = document.getElementById('Header');\r\n        const compensating = document.getElementById('compensating');\r\n        const targetA = document.getElementById('ledsheet');\r\n        const targetB = document.getElementById('visualDisplay');\r\n        const pos = Math.floor(back.getBoundingClientRect().top);\r\n\r\n        if (pos <= 0) {\r\n            targetA.className = 'ledsettings app__sheet sticky';\r\n            targetB.className = 'app__sheet visualdisplaysheet sticky'\r\n            compensating.style.height = '240px'\r\n            compensating.style.width = '0'\r\n            } else {\r\n            targetA.className = 'ledsettings app__sheet';\r\n            targetB.className = 'app__sheet visualdisplaysheet'\r\n            compensating.style.height = '0'\r\n            compensating.style.width = '0'\r\n            }\r\n    });\r\n\r\n    return (\r\n        <div >            \r\n            <Header/>   \r\n                <div  id='Header'></div>\r\n                <div id='compensating'></div> \r\n                <div className=\"app__flex\"> \r\n                    <div>                        \r\n                        <VisualDisplay/>\r\n                        <ChannelList/>\r\n                    </div>\r\n                    <div>\r\n                        <LedSettings/>\r\n                    </div>\r\n                </div>            \r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { initMarkers } from '../../services/appDisplayDrawingProcessor';\r\nimport { initState } from \"../../services/appProcessor\";\r\n\r\nconst Actions = () => {\r\n    const dispatch = useDispatch();\r\n    const channels = useSelector(state => state.channels)\r\n\r\n    const changeFillStatus = (e) => {\r\n        dispatch({type: 'CHANGE_FILL_STATUS', fill: e.value});\r\n    }\r\n\r\n    const calibreMinMax = (e, i) => {\r\n        dispatch({type: 'CHANGE_MAX_CHANNEL', max: e.value, id: i})\r\n        dispatch({type: 'CHANGE_MIN_CHANNEL', min: e.value, id: i})\r\n    }\r\n\r\n    const changeMaxChannel = (e, i) => {\r\n        dispatch({type: 'CHANGE_MAX_CHANNEL', max: e.value, id: i})\r\n        if(e.value < channels[i].min){\r\n            calibreMinMax(e, i);\r\n        } else {\r\n            dispatch({type: 'CHANGE_MAX_CHANNEL', max: e.value, id: i})\r\n        }  \r\n        initMarkers(); \r\n    }\r\n\r\n    const changeMinChannel = (e, i) => {        \r\n        if(e.value > channels[i].max){\r\n            calibreMinMax(e, i);\r\n        } else {\r\n            dispatch({type: 'CHANGE_MIN_CHANNEL', min: e.value, id: i})\r\n        } \r\n        initMarkers();\r\n    }\r\n\r\n    const changeVisMode = (e) => {\r\n        dispatch({type: 'CHANGE_VISMODE', rate: e.value})\r\n    }\r\n\r\n    const changeColor = (e) => {\r\n        dispatch({type: 'CHANGE_COLOR', color: e.value})\r\n    }\r\n\r\n    const changePeaksStatus = (e) => {\r\n        dispatch({type: 'CHANGE_PEAKS_STATUS', peaks: e.value})\r\n    }\r\n\r\n    const addNewChannel = (eArr) => {\r\n        dispatch({type: 'ADD_NEW_CHANNEL', newArr: eArr})\r\n    }\r\n\r\n    const changeSampleColor = (e) => {\r\n        dispatch({type: 'CHANGE_SAMPLE_COLOR', color: e.value, id: e.id})\r\n        initMarkers();\r\n    }\r\n\r\n    const assembleChange = (e) => {\r\n        dispatch({type: 'CHANGE_SAMPLE_ASSEMBLE', assemble: e.value, id: e.id})\r\n        \r\n    }\r\n\r\n    const rearChange = (e) => {\r\n        dispatch({type: 'CHANGE_REARBUFFER', rear: e.value, id: e.id})\r\n    }\r\n\r\n    const frontChange = (e) => {\r\n        dispatch({type: 'CHANGE_FRONTBUFFER', front: e.value, id: e.id})\r\n    }\r\n\r\n    const reactionChange = (e) => {\r\n        dispatch({type: 'CHANGE_REACTION', reaction: e.value, id: e.id})\r\n    }\r\n\r\n    const deleteChannel = (e) => {\r\n        dispatch({type: 'DELETE_SELECTED_CHANNEL', id: e.id})\r\n        initMarkers();\r\n    }\r\n\r\n    const changeLightUp = (e) => {\r\n        dispatch({type: 'CHANGE_LIGHT_UP', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeLightDown = (e) => {\r\n        dispatch({type: 'CHANGE_LIGHT_DOWN', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeLightMax = (e) => {\r\n        dispatch({type: 'CHANGE_LIGHT_MAX', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeVis = (e) => {\r\n        dispatch({type: 'CHANGE_VISUAL_SETTINGS', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const visBorChange = (e) => {\r\n        dispatch({type: 'CHANGE_BORDER_STATUS', value: e.checked})\r\n    }\r\n\r\n    const visLabChange = (e) => {        \r\n        dispatch({type: 'CHANGE_LABELS_STATUS', value: e.checked})\r\n    }\r\n\r\n    const fullScreenMode = (value) => {\r\n        dispatch({type: 'CHANGE_FULLSCREEN_MODE', value: value})\r\n    }\r\n\r\n    const onChangeRate = (e) => {\r\n        changeVisMode(e)\r\n        channels.forEach((item, i) => {\r\n            if(item.max > +e.value) {\r\n                changeMaxChannel(e, i)\r\n            }\r\n            if(item.min > +e.value) {\r\n                changeMinChannel(e, i)\r\n            }\r\n        });\r\n    }\r\n\r\n    //localstorage\r\n    localStorage.setItem('channels', JSON.stringify(channels))\r\n\r\n    return {changeFillStatus, \r\n            onChangeRate, \r\n            changeColor, \r\n            changePeaksStatus, \r\n            addNewChannel, \r\n            changeSampleColor,\r\n            assembleChange,\r\n            rearChange,\r\n            frontChange,\r\n            reactionChange,\r\n            deleteChannel,\r\n            changeMinChannel,\r\n            changeMaxChannel,\r\n            changeLightUp,\r\n            changeLightDown,\r\n            changeVis,\r\n            visBorChange,\r\n            visLabChange,\r\n            changeLightMax,\r\n            fullScreenMode}\r\n}\r\n\r\nexport default Actions;"],"names":["className","direction","scrollamount","Actions","changeFillStatus","onChangeRate","changeColor","changePeaksStatus","addNewChannel","rate","useSelector","state","fillStatus","renderColor","peaksStatus","channels","useEffect","initState","id","defaultValue","onChange","e","target","value","cons","variations","num","max","steep","dots","mdots","i","frequencyGenerated","freq","onClick","res","split","find","map","item","mark","includes","length","tempArr","push","min","color","assemble","rear","front","reaction","sort","a","b","initMarkers","changeSampleColor","assembleChange","rearChange","frontChange","reactionChange","deleteChannel","changeMinChannel","changeMaxChannel","divId","inId","trId","ufId","urId","dfId","drId","elements","arr","size","items","changeLightUp","changeLightDown","changeLightMax","changeVis","visBorChange","visLabChange","fullScreenMode","opacityUp","opacityDown","opacityMax","visSet","visLab","visBor","viewId","Math","floor","htmlFor","name","checked","type","window","addEventListener","ev","back","document","getElementById","compensating","targetA","targetB","getBoundingClientRect","top","style","height","width","ChannelList","dispatch","useDispatch","calibreMinMax","localStorage","setItem","JSON","stringify","fill","changeVisMode","forEach","peaks","eArr","newArr"],"sourceRoot":""}
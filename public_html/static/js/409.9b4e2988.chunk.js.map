{"version":3,"file":"static/js/409.9b4e2988.chunk.js","mappings":"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","sources":["components/appLedSettingsMini/LedSettingsMini.js"],"sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Actions from '../../store/actions/actions'\r\nimport './ledSettingsMini.scss'\r\n\r\nconst LedSettingsMini = () => {\r\n    const { changeLightUp,\r\n            changeLightDown,\r\n            changeLightMax,\r\n            changeVis,\r\n            visBorChange,\r\n            visLabChange,\r\n            fullScreenMode} = Actions()\r\n\r\n    const {channels} = useSelector(state => state)  \r\n    const opacityUp = useSelector(state => state.opacityUp)  \r\n    const opacityDown = useSelector(state => state.opacityDown) \r\n    const opacityMax = useSelector(state => state.opacityMax) \r\n    const visSet = useSelector(state => state.visSet)\r\n    const visLab = useSelector(state => state.visLab)\r\n    const visBor = useSelector(state => state.visBor)\r\n    \r\n    const elements = channels.map((item, i) => {\r\n        const viewId = `view${i}`\r\n        return (\r\n            <div key={i} className='ledsettingsmini__item'>\r\n                {visLab ? <div className='app__navtext'>\r\n                    {channels.length < 8 ? 'Канал:' : 'Кл:'}<br/>{item.mark}</div> : null}\r\n                    <div className={visBor ? 'app__bkg' : ''} >\r\n                        <div className={visLab ? 'ledsettingsmini__view' : 'ledsettingsmini__viewlarge'} \r\n                             id={viewId}>\r\n                        </div>\r\n                    </div>                \r\n            </div>    \r\n        )\r\n    });\r\n\r\n    const items = (max) => {\r\n        const arr = []\r\n        for (let i = 5; i <= max ; i += 5){\r\n            arr.push(<option key={i} value={i}>{i}</option>)  \r\n        } return arr               \r\n    }   \r\n\r\n    return (\r\n            <div id='ledsheetmini' className='ledsettingsmini app__sheet'>\r\n                <div className='app__flex__between'>\r\n                    <div className=\"app__title\">Визуальные настройки</div>\r\n                    <div className=\"app__title\">Всего каналов: {channels.length}</div>\r\n                </div>\r\n                <div className=\"app__line\"></div>\r\n\r\n                <div className='app__flex__between'>\r\n                <div className=\"app__bkg ledsettingsmini__sheet__elements app__flex__between\">\r\n                    {elements}\r\n                </div>\r\n                <div>\r\n                    <div className='app__flex__between'>\r\n                        <div className='app__center'>\r\n                            <div className='app__navtext'>Скорость зажигания</div>\r\n                            <div className='app__bkg ledsettingsmini__text'>{Math.floor(opacityUp*1000)}%</div>\r\n                            <select \r\n                                className=\"ledsettingsmini__select\"\r\n                                value={opacityUp*1000}\r\n                                onChange={(e) => changeLightUp(e.target)}>\r\n                                    {items(100)}\r\n                            </select>\r\n                        </div>\r\n                        <div className='app__center'>\r\n                            <div className='app__navtext'>Скорость затухания</div>\r\n                            <div className='app__bkg ledsettingsmini__text'>{Math.floor(opacityDown*1000)}%</div>\r\n                            <select \r\n                                className=\"ledsettingsmini__select\"\r\n                                value={opacityDown*1000}\r\n                                onChange={(e) => changeLightDown(e.target)}>\r\n                                    {items(100)}\r\n                            </select>\r\n                        </div>\r\n                        <div className='app__center'>\r\n                            <div className='app__navtext'>Максимальная яркость</div>\r\n                            <div className='app__bkg ledsettingsmini__text'>{Math.floor(opacityMax*100)}%</div>\r\n                            <select \r\n                                className=\"ledsettingsmini__select\"\r\n                                value={opacityMax*100}\r\n                                onChange={(e) => changeLightMax(e.target)}>\r\n                                    {items(100)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"app__title\">Варианты отрисовки</div>\r\n                    <select \r\n                        className=\"ledsettingsmini__selectS\"\r\n                        value={visSet}\r\n                        onChange={(e) => changeVis(e.target)}>\r\n                        <option value='none'>Нет</option>\r\n                        <option value='radialfromcenter'>Радиальный градиент от центра</option>\r\n                        <option value='radialtocenter'>Радиальный градиент к центру</option>\r\n                        <option value='linearfromcentervertically'>Вертикальный градиент от центра</option>\r\n                        <option value='lineartocentervertically'>Вертикальный градиент к центру</option>\r\n                        <option value='linearfromcenterhorizontally'>Горизонтальный градиент от центра</option>\r\n                        <option value='lineartocenterhorizontally'>Горизонтальный градиент к центру</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='visLab' className='app__title'> Лейблы....: </label>\r\n                    <input \r\n                        className='ledsettingsmini__checkbox' \r\n                        name='visLab'\r\n                        checked={visLab}\r\n                        onChange={(e) => visLabChange(e.target)}\r\n                        type=\"checkbox\"/> <br/>\r\n                    <label htmlFor='visBor' className='app__title'> Рамки.......: </label>\r\n                    <input \r\n                        className='ledsettingsmini__checkbox'\r\n                        name='visBor'\r\n                        checked={visBor} \r\n                        onChange={(e) => visBorChange(e.target)}\r\n                        type=\"checkbox\"/>\r\n                    <div className='app__line'></div>\r\n                \r\n                    <button \r\n                        className='ledsettingsmini__button' \r\n                        onClick={() => fullScreenMode(1)}>\r\n                        ПОЛНОЭКРАННЫЙ РЕЖИМ\r\n                    </button> \r\n                </div>            \r\n            </div> \r\n        </div>                  \r\n    )\r\n}\r\n\r\nexport default LedSettingsMini;"],"names":["Actions","changeLightUp","changeLightDown","changeLightMax","changeVis","visBorChange","visLabChange","fullScreenMode","channels","useSelector","state","opacityUp","opacityDown","opacityMax","visSet","visLab","visBor","elements","map","item","i","viewId","className","length","mark","id","items","max","arr","push","value","Math","floor","onChange","e","target","htmlFor","name","checked","type","onClick"],"sourceRoot":""}
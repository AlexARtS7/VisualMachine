{"version":3,"file":"static/js/210.aa116aea.chunk.js","mappings":"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","sources":["components/appLedSettings/LedSettings.js"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport Actions from '../../store/actions/actions'\r\nimport './ledSettings.scss'\r\n\r\nconst LedSettings = () => {\r\n    const { changeLightUp,\r\n            changeLightDown,\r\n            changeLightMax,\r\n            changeVis,\r\n            visBorChange,\r\n            visLabChange,\r\n            fullScreenMode} = Actions()\r\n\r\n    const {channels} = useSelector(state => state)  \r\n    const opacityUp = useSelector(state => state.opacityUp)  \r\n    const opacityDown = useSelector(state => state.opacityDown) \r\n    const opacityMax = useSelector(state => state.opacityMax) \r\n    const visSet = useSelector(state => state.visSet)\r\n    const visLab = useSelector(state => state.visLab)\r\n    const visBor = useSelector(state => state.visBor)\r\n    \r\n    const elements = channels.map((item, i) => {\r\n        const viewId = `view${i}`\r\n        console.log(viewId)\r\n        return (\r\n            <div key={i} className='ledsettings__item'>\r\n                {visLab ? <div className='app__navtext'>\r\n                    {channels.length < 8 ? 'Канал:' : 'Кл:'} {item.mark}</div> : null}\r\n                <div className={visBor ? 'app__bkg ledsettings__view' : 'ledsettings__view'} id={viewId}></div>\r\n            </div>    \r\n        )\r\n    });\r\n\r\n    const items = (max) => {\r\n        const arr = []\r\n        for (let i = 5; i <= max ; i += 5){\r\n            arr.push(<option key={i} value={i}>{i}</option>)  \r\n        } return arr               \r\n    }   \r\n\r\n    return (\r\n            <div id='ledsheet' className='ledsettings app__sheet'>\r\n                <div className='app__flex__between'>\r\n                    <div className=\"app__title\">Визуальные настройки</div>\r\n                    <div className=\"app__title\">Всего каналов: {channels.length}</div>\r\n                </div>\r\n                <div className=\"app__line\"></div>\r\n                <div className=\"app__bkg ledsettings__sheet app__flex__between\">\r\n                    {elements}\r\n                </div>\r\n                <div className='app__flex__between'>\r\n                    <div className='app__center'>\r\n                        <div className='app__navtext'>Скорость зажигания</div>\r\n                        <div className='app__bkg ledsettings__text'>{Math.floor(opacityUp*1000)}%</div>\r\n                        <select \r\n                            className=\"ledsettings__select\" \r\n                            size={8}\r\n                            value={opacityUp*1000}\r\n                            onChange={(e) => changeLightUp(e.target)}>\r\n                                {items(100)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='app__center'>\r\n                        <div className='app__navtext'>Скорость затухания</div>\r\n                        <div className='app__bkg ledsettings__text'>{Math.floor(opacityDown*1000)}%</div>\r\n                        <select \r\n                            className=\"ledsettings__select\" \r\n                            size={8}\r\n                            value={opacityDown*1000}\r\n                            onChange={(e) => changeLightDown(e.target)}>\r\n                                {items(100)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='app__center'>\r\n                        <div className='app__navtext'>Максимальная яркость</div>\r\n                        <div className='app__bkg ledsettings__text'>{Math.floor(opacityMax*100)}%</div>\r\n                        <select \r\n                            className=\"ledsettings__select\" \r\n                            size={8}\r\n                            value={opacityMax*100}\r\n                            onChange={(e) => changeLightMax(e.target)}>\r\n                                {items(100)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='app__line'></div>\r\n                <div className=\"app__title\">Варианты отрисовки</div>\r\n                <div className='app__line'></div>\r\n                <select \r\n                    className=\"ledsettings__selectS\" \r\n                    size={8}\r\n                    value={visSet}\r\n                    onChange={(e) => changeVis(e.target)}>\r\n                    <option value='none'>Нет</option>\r\n                    <option value='radialfromcenter'>Радиальный градиент от центра</option>\r\n                    <option value='radialtocenter'>Радиальный градиент к центру</option>\r\n                    <option value='linearfromcentervertically'>Вертикальный градиент от центра</option>\r\n                    <option value='lineartocentervertically'>Вертикальный градиент к центру</option>\r\n                    <option value='linearfromcenterhorizontally'>Горизонтальный градиент от центра</option>\r\n                    <option value='lineartocenterhorizontally'>Горизонтальный градиент к центру</option>\r\n                </select>\r\n                <div className='app__line'></div>\r\n                <label htmlFor='visLab' className='app__title'> Лейблы каналов: </label>\r\n                <input \r\n                    className='ledsettings__checkbox' \r\n                    name='visLab'\r\n                    checked={visLab}\r\n                    onChange={(e) => visLabChange(e.target)}\r\n                    type=\"checkbox\"/> <br/>\r\n                <label htmlFor='visBor' className='app__title'> Рамки каналов: </label>\r\n                <input \r\n                    className='ledsettings__checkbox'\r\n                    name='visBor'\r\n                    checked={visBor} \r\n                    onChange={(e) => visBorChange(e.target)}\r\n                    type=\"checkbox\"/>\r\n                <div className='app__line'></div>\r\n            \r\n                <button \r\n                    className='ledsettings__button' \r\n                    onClick={() => fullScreenMode(1)}>\r\n                    ПОЛНОЭКРАННЫЙ РЕЖИМ</button>       \r\n            </div>    \r\n    )\r\n}\r\n\r\nexport default LedSettings;"],"names":["Actions","changeLightUp","changeLightDown","changeLightMax","changeVis","visBorChange","visLabChange","fullScreenMode","channels","useSelector","state","opacityUp","opacityDown","opacityMax","visSet","visLab","visBor","elements","map","item","i","viewId","console","log","className","length","mark","id","items","max","arr","push","value","Math","floor","size","onChange","e","target","htmlFor","name","checked","type","onClick"],"sourceRoot":""}
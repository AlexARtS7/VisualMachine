{"version":3,"file":"static/js/161.514515f8.chunk.js","mappings":"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","sources":["components/appHeader/Header.js","components/appVisualDisplay/VisualDisplay.js","components/appChannelList/ChannelItem.js","components/appChannelList/ChannelList.js","components/pages/MainPage.js","store/actions/actions.js"],"sourcesContent":["import './header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"app__sheet appheadersheet\">\r\n          <div>\r\n            <div className=\"appheadersheet__title\">SoundVisualMachine</div>\r\n            <marquee className=\"appheadersheet__info\" direction=\"left\" scrollamount=\"4\">Добро пожаловать в SoundVisualMachine!!! Это приложение для анализа звукового потока в реальном времени и дальнейшее его сопровождение цветовой поддержкой - цветомузыка онлайн на экране вашего монитора. приложение имеет простые, но в то же время гибкие настройки деления звукового потока на частоты, а так же удобные настройки визуального цветового сопровождения. я надеюсь вы найдете это приложение интересным для себя. вопросы и пожелания можете направлять на почту: enginpro@yandex.ru  . желаю приятного времяпровождения!;)</marquee>\r\n          </div>\r\n        </div>        \r\n    );\r\n  }\r\n  \r\n  export default Header;","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { initState } from '../../services/appProcessor';\r\n\r\nimport Actions from '../../store/actions/actions';\r\n\r\nimport './visualDisplay.scss';\r\n\r\nconst VisualDisplay = () => {\r\n    const {changeFillStatus, onChangeRate, changeColor, changePeaksStatus, addChannels} = Actions();\r\n\r\n    const rate = useSelector(state => state.rate)\r\n    const fillStatus = useSelector(state => state.fillStatus)\r\n    const renderColor = useSelector(state => state.renderColor)\r\n    const peaksStatus = useSelector(state => state.peaksStatus)\r\n\r\n    const freq = () => {\r\n        let cons\r\n        const frequencyGenerated = (max, steep, dots, mdots) => {\r\n            cons = mdots + ' 0 ';\r\n            for (let i = 0 + steep ; i < max ; i += steep){\r\n                cons += `${dots} ${i} `;\r\n            } cons += mdots;            \r\n        }\r\n        \r\n        const variations = [\r\n            257, 8, '........', '..', \r\n            206, 6, '.......', '.....',\r\n            93, 2, '....', '..',\r\n            46, 2, '..................', '..']\r\n        \r\n        let num = 0\r\n        switch (rate) {\r\n            case 204:\r\n                num = 1                \r\n            break;\r\n            case 92:\r\n                num = 2\r\n            break;\r\n            default://\r\n        }  \r\n        frequencyGenerated(\r\n            variations[4*num],\r\n            variations[4*num+1],\r\n            variations[4*num+2],\r\n            variations[4*num+3],)   \r\n            return cons;      \r\n    }\r\n\r\n    useEffect(()=>{\r\n        initState();\r\n    })   \r\n\r\n    return (\r\n        <div id='visualDisplay' className=\"app__sheet visualdisplaysheet\">\r\n            <div className='app__flex__between'>\r\n            <div className=\"app__title\">Отрисовка потока</div>\r\n                <div>\r\n                    <select \r\n                    defaultValue={rate}\r\n                    onChange={(e) => onChangeRate(e.target)}>\r\n                        <option value=\"255\">Диапазон: 255 выборок из потока</option>\r\n                        <option value=\"204\">Диапазон: 204 выборки из потока</option>\r\n                        <option value=\"92\">Диапазон: 92 выборки из потока</option>\r\n                        {/* <option value=\"44\">Mode: 45 samples</option> */}\r\n                    </select>\r\n                    <select \r\n                    defaultValue={fillStatus}\r\n                    onChange={(e) => changeFillStatus(e.target)}>\r\n                        <option value=\"1\">Вариант отрисовки: Заливка</option>\r\n                        <option value=\"0\">Вариант отрисовки: Контуры</option>\r\n                    </select>\r\n                    <select \r\n                    defaultValue={renderColor}\r\n                    onChange={(e) => changeColor(e.target)}> \r\n                        <option value=\"0,0,255\">Цвет: Синий</option>\r\n                        <option value=\"255,0,0\">Цвет: Красный</option>\r\n                        <option value=\"0,255,0\">Цвет: Зеленый</option>\r\n                        <option value=\"0,255,255\">Цвет: Аква</option>\r\n                        <option value=\"255,255,0\">Цвет: Желтый</option>\r\n                        <option value=\"0, 100, 0\">Цвет: Тёмнозеленый</option>\r\n                        <option value=\"128, 128, 0\">Цвет: Оливковый</option>\r\n                        <option value=\"255, 165, 0\">Цвет: Оранж</option>\r\n                        <option value=\"95, 158, 160\">Цвет: Кад.Синий</option>\r\n                        <option value=\"128, 0, 128\">Цвет: Пурпурный</option>\r\n                        <option value=\"154, 205, 50\">Цвет: ЖелтоЗеленый</option>\r\n                        <option value=\"189, 183, 107\">Цвет: НочнойКаи</option>\r\n                    </select>\r\n                    <select \r\n                    defaultValue={peaksStatus}\r\n                    onChange={(e) => changePeaksStatus(e.target)}>\r\n                        <option value=\"1\">Пики: Да</option>\r\n                        <option value=\"0\">Пики: Нет</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <canvas id='canvasDisplay'></canvas>\r\n            <div className=\"visualdisplaysheet__center\">\r\n                <div className=\"visualdisplaysheet__freq\">{freq()}</div>\r\n            </div> \r\n            <div className='app__line'></div>  \r\n            <div>\r\n                <span className=\"app__title\">Управление каналами:</span>\r\n                <button onClick={addChannels}>ДОБАВИТЬ НОВЫЙ</button>\r\n            </div>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VisualDisplay;","import { useSelector } from 'react-redux'\r\nimport Actions from '../../store/actions/actions';\r\n\r\nconst ChannelItem = ({id}) => {\r\n    const { changeSampleColor, \r\n            assembleChange, \r\n            rearChange, \r\n            frontChange, \r\n            reactionChange,\r\n            deleteChannel,\r\n            changeMinChannel,\r\n            changeMaxChannel} = Actions();\r\n\r\n    const rate = useSelector(state => state.rate)\r\n    const {channels} = useSelector(state => state)   \r\n    \r\n    const divId = `div${id}`;\r\n    const inId = `in${id}`;\r\n    const trId = `tr${id}`;\r\n    const ufId = `uf${id}`;\r\n    const urId = `ur${id}`;\r\n    const dfId = `df${id}`;\r\n    const drId = `dr${id}`;\r\n    \r\n    const elements = (max) => {\r\n        const arr = []\r\n        for (let i = 0; i <= max ; i ++){\r\n            arr.push(<option key={i} value={i}>{i}</option>)  \r\n        } return arr               \r\n    }   \r\n\r\n    return (\r\n        <div className=\"app__sheet channellist\">\r\n            <div className='app__flex__between'>\r\n                <div className=\"app__title\">Канал : {channels[id].mark}</div>\r\n                <div>\r\n                <select\r\n                    value={channels[id].color}\r\n                    id={id}\r\n                    onChange={(e) => changeSampleColor(e.target, id)}>\r\n                        <option value=\"0,0,255\">Цвет: Синий</option>\r\n                        <option value=\"255,0,0\">Цвет: Красный</option>\r\n                        <option value=\"0,255,0\">Цвет: Зеленый</option>\r\n                        <option value=\"0,255,255\">Цвет: Аква</option>\r\n                        <option value=\"255,255,0\">Цвет: Желтый</option>\r\n                        <option value=\"0, 100, 0\">Цвет: Тёмнозеленый</option>\r\n                        <option value=\"128, 128, 0\">Цвет: Оливковый</option>\r\n                        <option value=\"255, 165, 0\">Цвет: Оранж</option>\r\n                        <option value=\"95, 158, 160\">Цвет: Кад.Синий</option>\r\n                        <option value=\"128, 0, 128\">Цвет: Пурпурный</option>\r\n                        <option value=\"154, 205, 50\">Цвет: ЖелтоЗеленый</option>\r\n                        <option value=\"189, 183, 107\">Цвет: НочнойКаи</option>\r\n                </select>\r\n                {id > 0 ? <button \r\n                        className='closebutton' \r\n                        id={id}\r\n                        onClick={(e) => deleteChannel(e.target)}\r\n                        >УДАЛИТЬ КАНАЛ</button>: null}\r\n                    \r\n                </div>              \r\n            </div>            \r\n            <div className=\"app__line\"></div>\r\n            <div className=\"app__flex__between\">\r\n                <div className=\"app__center\">\r\n                    <div className=\"app__navtext\">Начало</div>\r\n                    <select \r\n                        className=\"channellist__select\" \r\n                        size={4}\r\n                        value={channels[id].min}\r\n                        id={id}\r\n                        onChange={(e) => changeMinChannel(e.target, id)}>\r\n                        {elements(rate)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center\">\r\n                    <div className=\"app__navtext\">Конец</div>\r\n                    <select \r\n                        className=\"channellist__select\" \r\n                        size={4}\r\n                        value={channels[id].max}\r\n                        id={id}\r\n                        onChange={(e) => changeMaxChannel(e.target, id)}>\r\n                        {elements(rate)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>от выборки</div>\r\n                    <div className='app__bkg channellist__text'>{channels[id].min}</div>\r\n                    <div className='app__navtext'>по выборку</div>\r\n                    <div className='app__bkg channellist__text'>{channels[id].max}</div>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>Вариант сборки канала</div>\r\n                    <select                 \r\n                        className=\"channellist__select\"\r\n                        id={id}\r\n                        size={4}\r\n                        value={channels[id].assemble}\r\n                        onChange={(e) => assembleChange(e.target, id)}> \r\n                            <option value=\"average\">Среднее от выбранных</option>\r\n                            <option value=\"maximum\">Максимальный из выбранных</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>Визуальное представление собранного канала</div>\r\n                    <div className='channellist__renderarea app__bkg'>    \r\n                        <div className='div' id={divId}></div>\r\n                        <div className='indicator' id={inId}></div>\r\n                        <div className='markers up' id={ufId}></div>\r\n                        <div className='markers up' id={urId}></div>\r\n                        <div className='markers down' id={dfId}></div>\r\n                        <div className='markers down' id={drId}></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"app__center ml\">\r\n                    <div className='app__navtext'>Пик</div>\r\n                    <div className='channellist__triggeringarea app__bkg' id={trId}></div> \r\n                </div>            \r\n                    <div className=\"app__center ml\">\r\n                        <div className=\"app__navtext\">Тыл</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            size={4}\r\n                            value={channels[id].rear}\r\n                            id={id}\r\n                            onChange={(e) => rearChange(e.target, id)}>\r\n                            {elements(50)}\r\n                        </select>\r\n                    </div>                  \r\n                    <div className=\"app__center\">\r\n                        <div className=\"app__navtext\">Фронт</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            size={4}\r\n                            value={channels[id].front}\r\n                            id={id}\r\n                            onChange={(e) => frontChange(e.target, id)}>\r\n                            {elements(50)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"app__center ml\">\r\n                        <div className='app__navtext'>буфер фронта</div>\r\n                        <div className='app__bkg channellist__text'>{channels[id].front}</div>\r\n                        <div className='app__navtext'>буфер тыла</div>\r\n                        <div className='app__bkg channellist__text'>{channels[id].rear}</div>\r\n                    </div>\r\n                    <div className=\"app__center ml\">\r\n                        <div className=\"app__navtext\">реакция</div>\r\n                        <select \r\n                            className=\"channellist__select\" \r\n                            id={id}\r\n                            value={channels[id].reaction}\r\n                            size={4}\r\n                            onChange={(e) => reactionChange(e.target, id)}>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                    </div> \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelItem;","import ChannelItem from './ChannelItem';\r\nimport { useSelector } from 'react-redux';\r\nimport './channelList.scss'\r\n\r\nconst ChannelList = () => {\r\n    const {channels} = useSelector(state => state);\r\n\r\n    const items = channels.map((item, i) => {\r\n            return <ChannelItem key={i} id={i}/>       \r\n    })\r\n\r\n    return (\r\n       <>\r\n            {items}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default ChannelList;","import { lazy, Suspense } from \"react\";\r\nimport Header from \"../appHeader/Header\";\r\nimport VisualDisplay from \"../appVisualDisplay/VisualDisplay\";\r\nimport ChannelList from \"../appChannelList/ChannelList\";\r\n\r\nconst LedSettings = lazy(() => import('../appLedSettings/LedSettings'));\r\nconst LedSettingsMini = lazy(() => import('../appLedSettingsMini/LedSettingsMini'));\r\n\r\nconst MainPage = () => {\r\n   \r\n    return (\r\n        <div >            \r\n            <Header/>   \r\n                <div  id='Header'></div>\r\n                <div id='compensating'></div> \r\n                <Suspense fallback=\"Loading...\">\r\n                    <div className=\"app__flex\"> \r\n                        <div>                        \r\n                            <VisualDisplay/>\r\n                            {window.innerWidth < 1500 ? <LedSettingsMini/> : null}              \r\n                            <ChannelList/>\r\n                        </div>\r\n                        <div>\r\n                            {window.innerWidth > 1500 ? <LedSettings/> : null} \r\n                        </div>\r\n                    </div>   \r\n                </Suspense>            \r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { initMarkers } from '../../services/appDisplayDrawingProcessor';\r\nimport { initState } from \"../../services/appProcessor\";\r\nimport { hrefInition } from \"../../services/appDisplayDrawingProcessor\";\r\n\r\nconst Actions = () => {\r\n    const dispatch = useDispatch();\r\n    const channels = useSelector(state => state.channels)\r\n    const fullScreen = useSelector(state => state.fullScreen)\r\n\r\n    const changeFillStatus = (e) => {        \r\n        localStorage.setItem('fillStatus', e.value)\r\n        dispatch({type: 'CHANGE_FILL_STATUS', fill: e.value});\r\n    }\r\n\r\n    const changeMaxChannel = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].max = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n\r\n        if(e.value < channels[i].min){\r\n            changeMinChannel(e, i);\r\n        }\r\n        initMarkers(); \r\n    }\r\n\r\n    const changeMinChannel = (e, i) => {         \r\n        const tempArr = channels;\r\n        tempArr[i].min = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n\r\n        if(e.value > channels[i].max){\r\n            changeMaxChannel(e, i);\r\n        }\r\n        initMarkers();\r\n    }\r\n\r\n    const changeVisMode = (e) => {        \r\n        localStorage.setItem('rate', e.value)\r\n        dispatch({type: 'CHANGE_VISMODE', rate: e.value})\r\n    }\r\n\r\n    const changeColor = (e) => {        \r\n        localStorage.setItem('renderColor', e.value)\r\n        dispatch({type: 'CHANGE_COLOR', color: e.value})\r\n    }\r\n\r\n    const changePeaksStatus = (e) => {        \r\n        localStorage.setItem('peaksStatus', e.value)\r\n        dispatch({type: 'CHANGE_PEAKS_STATUS', peaks: e.value})\r\n    }\r\n\r\n    const changeSampleColor = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].color = e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n        initMarkers();\r\n    }\r\n\r\n    const assembleChange = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].assemble = e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })        \r\n    }\r\n\r\n    const rearChange = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].rear = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n    }\r\n\r\n    const frontChange = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].front = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n    }\r\n\r\n    const reactionChange = (e, i) => {\r\n        const tempArr = channels;\r\n        tempArr[i].reaction = +e.value\r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n    }\r\n\r\n    const changeLightUp = (e) => {        \r\n        localStorage.setItem('opacityUp', e.value/1000)\r\n        dispatch({type: 'CHANGE_LIGHT_UP', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeLightDown = (e) => {        \r\n        localStorage.setItem('opacityDown', e.value/1000)\r\n        dispatch({type: 'CHANGE_LIGHT_DOWN', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeLightMax = (e) => {        \r\n        localStorage.setItem('opacityMax', e.value/100)\r\n        dispatch({type: 'CHANGE_LIGHT_MAX', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const changeVis = (e) => {        \r\n        localStorage.setItem('visSet', e.value)\r\n        dispatch({type: 'CHANGE_VISUAL_SETTINGS', value: e.value})\r\n        initState();\r\n    }\r\n\r\n    const visBorChange = (e) => {        \r\n        localStorage.setItem('visBor', e.checked)\r\n        dispatch({type: 'CHANGE_BORDER_STATUS', value: e.checked})\r\n    }\r\n\r\n    const visLabChange = (e) => {   \r\n        localStorage.setItem('visLab', e.checked)     \r\n        dispatch({type: 'CHANGE_LABELS_STATUS', value: e.checked})\r\n    }\r\n\r\n    const fullScreenMode = (value) => {\r\n        dispatch({type: 'CHANGE_FULLSCREEN_MODE', value: value})\r\n    }\r\n\r\n    const onChangeRate = (e) => {\r\n        changeVisMode(e)\r\n        channels.forEach((item, i) => {\r\n            if(item.max > +e.value) {\r\n                changeMaxChannel(e, i)\r\n            }\r\n            if(item.min > +e.value) {\r\n                changeMinChannel(e, i)\r\n            }\r\n        });\r\n    }\r\n\r\n    const addChannels = () => {\r\n        const abc = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\r\n        let res = abc.find(i => !channels.map(item => item.mark).includes(i))\r\n        if(channels.length < 10){\r\n            const tempArr = channels;\r\n            tempArr.push (\r\n                {mark: res, min: 0, max: 0, \r\n                color: '0,255,0', \r\n                assemble: 'maximum', rear: 28, \r\n                front: 10, reaction: 2})\r\n         \r\n        tempArr.sort((a, b) => {\r\n            if(a.mark < b.mark) return -1;\r\n            if(a.mark > b.mark) return 1;\r\n            })\r\n\r\n            dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n            initMarkers();\r\n        }\r\n    }\r\n    \r\n    const deleteChannel = (i) => {\r\n        const tempArr = channels;\r\n        tempArr.splice(i, 1);   \r\n\r\n        dispatch({type: 'CHANGE_CHANNEL_ARRAY', tempArr: tempArr })\r\n        initMarkers();\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({type: 'CHANGE_HREFINIT', hrefInit: hrefInition(), initHref: window.location.href })\r\n    }, [fullScreen])\r\n    \r\n    //localstorage\r\n    localStorage.setItem('channels', JSON.stringify(channels))\r\n\r\n    return {changeFillStatus, \r\n            addChannels,\r\n            onChangeRate, \r\n            changeColor, \r\n            changePeaksStatus, \r\n            changeSampleColor,\r\n            assembleChange,\r\n            rearChange,\r\n            frontChange,\r\n            reactionChange,\r\n            deleteChannel,\r\n            changeMinChannel,\r\n            changeMaxChannel,\r\n            changeLightUp,\r\n            changeLightDown,\r\n            changeVis,\r\n            visBorChange,\r\n            visLabChange,\r\n            changeLightMax,\r\n            fullScreenMode}\r\n}\r\n\r\nexport default Actions;"],"names":["className","direction","scrollamount","Actions","changeFillStatus","onChangeRate","changeColor","changePeaksStatus","addChannels","rate","useSelector","state","fillStatus","renderColor","peaksStatus","useEffect","initState","id","defaultValue","onChange","e","target","value","cons","variations","num","max","steep","dots","mdots","i","frequencyGenerated","freq","onClick","changeSampleColor","assembleChange","rearChange","frontChange","reactionChange","deleteChannel","changeMinChannel","changeMaxChannel","channels","divId","inId","trId","ufId","urId","dfId","drId","elements","arr","push","mark","color","size","min","assemble","rear","front","reaction","items","map","item","LedSettings","lazy","LedSettingsMini","Suspense","fallback","window","innerWidth","dispatch","useDispatch","fullScreen","tempArr","type","initMarkers","hrefInit","hrefInition","initHref","location","href","localStorage","setItem","JSON","stringify","fill","res","split","find","includes","length","sort","a","b","changeVisMode","forEach","peaks","splice","changeLightUp","changeLightDown","changeVis","visBorChange","checked","visLabChange","changeLightMax","fullScreenMode"],"sourceRoot":""}